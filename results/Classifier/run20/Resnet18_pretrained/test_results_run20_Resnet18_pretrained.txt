----------------- Options ---------------
             aspect_ratio: 1.0                           
               batch_size: 64                            	[default: 1]
          checkpoints_dir: /scratch/checkpoints          	[default: ./checkpoints]
                crop_size: 64                            
               data_phase: train                         
                data_root: datasets/ROOM_composite       
                 dataroot: /scratch/datasets/ROOM_composite	[default: None]
             dataset_mode: move_eval                     
                direction: AtoB                          
             display_freq: 100                           
          display_winsize: 256                           
                    epoch: latest                        
            freeze_resnet: False                         
                  gpu_ids: 0                             
                init_gain: 0.02                          
                init_type: normal                        
                 input_nc: 3                             
                  isTrain: False                         	[default: None]
          keep_last_batch: False                         
                load_iter: 0                             	[default: 0]
                load_size: 64                            
         max_dataset_size: inf                           
                  min_iou: 0.5                           
          min_obj_surface: 100                           
                    model: classifier                    	[default: copy]
               model_type: Resnet18_pretrained           	[default: default]
               n_layers_D: 3                             
                     name: Classifier                    
                      ndf: 64                            
                     netD: basic                         
                     netG: classifier                    
                      ngf: 64                            
               no_dropout: False                         
                  no_flip: True                          
                     norm: instance                      
                 num_test: 5000                          
              num_threads: 4                             
                output_nc: 3                             
                    phase: test                          
               preprocess: resize                        
              results_dir: /scratch/results/             	[default: ./results/]
                      run: 20                            	[default: -1]
                     seed: 42                            	[default: 0]
           serial_batches: False                         
                   suffix:                               
                  verbose: False                         
----------------- End -------------------
Batch size is set to 1 for testing
dataset [MoveEvalDataset] and dataloder are created
model [ClassifierModel] was created
loading the model from /scratch/checkpoints/Classifier/latest_net_Classifier.pth
---------- Networks initialized -------------
[Network Classifier] Total number of parameters : 11.179 M
-----------------------------------------------
creating web directory /scratch/results/Classifier/test_latest
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.57, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.29, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.54, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.55, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.61, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.65, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.54, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.59, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.39, Var0.33, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.57, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.53, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.40, Var0.33, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.55, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.53, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.36, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.35, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.56, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.53, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.57, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.59, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.62, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.53, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.39, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.36, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.57, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.22, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.14, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.36, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.60, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.35, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.32, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.55, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.59, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.42, Var0.33, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.57, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.29, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.57, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.55, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.65, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.57, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.57, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.55, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.23, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.59, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.37, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.36, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.25, Var0.33, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.35, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.59, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.34, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.36, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.20, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.59, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.22, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.54, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.37, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.58, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.54, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.21, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.60, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.57, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.53, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.57, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.55, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.33, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.55, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.67, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.55, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.59, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.53, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.18, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.44, Var0.33, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.57, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.56, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.31, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.44, Var0.33, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.57, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.34, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.18, Var0.64, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.55, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.59, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.32, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.60, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.35, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.54, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.14, Var0.33, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.61, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.35, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.55, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.58, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.57, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.41, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.34, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.18, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.35, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.58, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.54, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.57, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.33, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.63, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.58, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.58, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.28, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.37, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.60, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.66, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.34, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.57, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.55, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.37, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.22, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.35, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.58, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.53, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.33, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.59, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.32, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.23, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.53, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.21, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.56, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.56, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.34, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.39, Var0.33, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.23, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.56, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.64, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.56, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.59, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.56, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.45, Var0.33, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.55, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.22, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.42, Var0.32, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.22, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.37, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.55, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.56, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.54, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.33, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.55, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.56, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.60, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.33, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.60, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.34, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.36, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.54, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.53, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.36, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.33, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.53, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.54, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.64, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.34, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.57, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.31, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.55, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.14, Var0.33, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.36, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.42, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.39, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.57, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.35, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.37, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.53, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.55, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.35, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.33, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.35, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.37, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.56, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.35, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.53, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.35, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.32, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.54, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.18, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.35, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.53, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.36, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.14, Var0.33, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.64, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.18, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.18, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.64, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.53, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.57, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.54, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.53, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.35, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.44, Var0.33, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.57, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.53, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.55, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.33, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.59, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.33, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.53, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.35, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.60, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.36, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.39, Var0.33, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.40, Var0.34, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.23, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.39, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.39, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.36, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.53, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.18, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.39, Var0.33, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.14, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.54, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.56, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.54, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.64, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.32, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.35, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.54, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.57, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.62, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.35, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.55, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.56, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.63, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.55, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.33, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.41, Var0.33, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.42, Var0.33, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.60, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.53, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.57, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.37, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.55, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.41, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.37, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.57, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.65, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.66, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.36, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.59, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.35, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.59, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.35, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.32, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.61, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.32, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.57, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.57, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.55, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.54, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.18, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.35, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.57, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.32, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.53, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.56, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.60, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.41, Var0.34, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.59, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.35, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.59, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.33, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.35, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.56, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.55, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.58, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.56, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.55, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.54, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.36, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.37, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.35, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.34, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.32, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.30, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.39, Var0.33, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.56, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.53, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.23, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.56, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.33, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.57, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.40, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.45, Var0.33, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.21, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.57, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.54, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.44, Var0.33, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.37, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.39, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.55, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.18, Var0.65, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.32, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.59, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.14, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.58, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.30, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.40, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.32, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.53, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.56, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.34, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.53, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.33, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.59, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.14, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.02, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.41, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.55, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.65, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.14, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.61, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.58, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.55, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.54, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.54, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.33, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.34, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.59, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.23, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.56, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.58, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.18, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.52, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.59, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.33, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.40, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.60, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.35, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.35, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.35, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.55, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.14, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.20, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.48, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.44, Var0.32, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.36, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.54, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.41, Var0.34, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.33, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.34, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.59, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.56, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.40, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.56, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.49, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.56, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.10, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.35, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.53, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.23, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.50, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.40, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.51, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.56, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.34, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.51, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.37, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.35, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.06, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.31, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.34, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.22, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.46, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.37, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.39, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.52, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.46, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.48, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.09, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.51, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.51, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.07, Var0.56, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.50, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.48, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.47, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.59, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.31, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.26, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.44, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.37, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.38, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.39, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.14, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.05, Var0.37, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.40, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.49, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.31, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.62, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.16, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.44, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.01, Var0.41, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.53, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.33, Var0.40, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.38, Var0.46, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.14, Var0.47, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.25, Var0.42, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.38, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.40, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.40, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.32, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.45, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.41, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.14, Var0.33, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.47, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:-0.19, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.03, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.06, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.12, Var0.49, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.45, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.35, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.10, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.37, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.05, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.35, Var0.43, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.13, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.35, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.36, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.11, Var0.45, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.21, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.37, Var0.38, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.08, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.13, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:-0.00, Var0.41, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.08, Var0.43, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.16, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.41, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.30, Var0.36, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.04, Var0.38, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.40, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.57, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.15, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.07, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.20, Var0.52, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.01, Var0.50, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.28, Var0.50, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.11, Var0.45, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:-0.20, Var0.52, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.36, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.17, Var0.42, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.09, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.39, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.29, Var0.48, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.39, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.61, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.32, Var0.37, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.24, Var0.39, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.19, Var0.47, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.18, Var0.42, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.00, Var0.43, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.34, Var0.44, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.43, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:-0.03, Var0.41, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.04, Var0.44, Min & max-1.00, 1.00
Batch statistics: move (shape:torch.Size([1, 3, 64, 64])): Mean:0.12, Var0.42, Min & max-1.00, 1.00
Batch statistics: real (shape:torch.Size([1, 3, 64, 64])): Mean:0.02, Var0.46, Min & max-1.00, 1.00
Batch statistics: scanline (shape:torch.Size([1, 3, 64, 64])): Mean:0.27, Var0.49, Min & max-1.00, 1.00
Batch statistics: random (shape:torch.Size([1, 3, 64, 64])): Mean:0.22, Var0.37, Min & max-1.00, 1.00
Confusion matrix:
tensor([[1000.,    0.,    0.,    0.],
        [1000.,    0.,    0.,    0.],
        [1000.,    0.,    0.,    0.],
        [1000.,    0.,    0.,    0.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([1., 0., 0., 0.])             
Predicted per class: tensor([4000.,    0.,    0.,    0.])            
GT # instances per class: tensor([1000., 1000., 1000., 1000.]) 
Total run time testing script: 38.5 sec (999 iterations)
