starting training classifier (run 20)
----------------- Options ---------------
               batch_size: 64                            	[default: 1]
                    beta1: 0.5                           
                    beta2: 0.999                         
          checkpoints_dir: /scratch/checkpoints          	[default: ./checkpoints]
           continue_train: False                         
                crop_size: 64                            
                data_root: datasets/ROOM_composite       
                 dataroot: /scratch/datasets/ROOM_composite	[default: None]
             dataset_mode: move_eval                     
                direction: AtoB                          
              display_env: main                          
             display_freq: 50                            	[default: 100]
               display_id: 0                             	[default: 1]
            display_ncols: 4                             
             display_port: 8097                          
           display_server: http://localhost              
          display_winsize: 256                           
                    epoch: latest                        
              epoch_count: 1                             
              fake_target: 0.1                           
                 gan_mode: vanilla                       
                  gpu_ids: 0                             
                init_gain: 0.02                          
                init_type: normal                        
                 input_nc: 3                             
                  isTrain: True                          	[default: None]
          keep_last_batch: False                         
                load_iter: 0                             	[default: 0]
                load_size: 64                            
                       lr: 0.0002                        
           lr_decay_iters: 50                            
                lr_policy: linear                        
         max_dataset_size: inf                           
          min_obj_surface: 100                           
                    model: classifier                    	[default: copy]
               model_type: Resnet18                      	[default: default]
                 n_epochs: 100                           
           n_epochs_decay: 200                           	[default: 100]
               n_layers_D: 3                             
                     name: Classifier                    
                      ndf: 64                            
                     netD: basic                         
                     netG: classifier                    
                      ngf: 64                            
               no_dropout: False                         
                  no_flip: True                          
                  no_html: False                         
             noisy_labels: False                         
                     norm: instance                      
              num_threads: 4                             
                output_nc: 3                             
                    phase: train                         
                pool_size: 50                            
               preprocess: resize                        
               print_freq: 50                            	[default: 20]
              real_target: 0.8                           
                      run: 20                            	[default: -1]
             save_by_iter: False                         
          save_epoch_freq: 100                           	[default: 5]
         save_latest_freq: 5000                          
                     seed: 42                            	[default: 0]
           serial_batches: False                         
                   suffix:                               
              tracemalloc: False                         
         update_html_freq: 100                           
                  use_amp: False                         
           val_batch_size: 128                           
                 val_freq: 100                           
                  verbose: True                          	[default: False]
----------------- End -------------------
dataset [MoveEvalDataset] and dataloder are created
dataset [MoveEvalDataset] and dataloder are created
The number of validation images = 1000
Starting training of classifier-model
The number of training images = 5000
The number of epochs to run = 300
gpu_ids: [0]
initialize network with normal
model [ClassifierModel] was created
---------- Networks initialized -------------
DataParallel(
  (module): ResNet18(
    (model): ResNet(
      (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
      (layer1): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (1): BasicBlock(
          (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer2): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer3): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (layer4): Sequential(
        (0): BasicBlock(
          (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (downsample): Sequential(
            (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
            (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
        (1): BasicBlock(
          (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
          (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
      (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
      (fc): Linear(in_features=512, out_features=4, bias=True)
    )
  )
)
[Network Classifier] Total number of parameters : 11.179 M
-----------------------------------------------
create web directory /scratch/checkpoints/Classifier/web...
Confusion matrix:
tensor([[128.,   0.,   0.,   0.],
        [128.,   0.,   0.,   0.],
        [128.,   0.,   0.,   0.],
        [128.,   0.,   0.,   0.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([1., 0., 0., 0.])             
Predicted per class: tensor([512.,   0.,   0.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:1) in                         1.9 s.
accuracy: tensor(0.7500)
tensor([[52.,  8.,  0.,  4.],
        [44., 15.,  0.,  5.],
        [ 0.,  0., 64.,  0.],
        [ 3.,  0.,  0., 61.]])
(epoch: 1, batches: 50, time: 0.003, data: 0.009) loss_real: 1.028 loss_move: 1.159 loss_random: 0.098 loss_scanline: 0.896 loss: 3.182 acc_real: 0.812 acc_move: 0.234 acc_scanline: 0.953 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 1 / 300 	 Time Taken: 11 sec
accuracy: tensor(0.9531)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [12.,  0.,  0., 52.]])
Confusion matrix:
tensor([[  1., 127.,   0.,   0.],
        [  0., 127.,   0.,   1.],
        [ 27.,  86.,   0.,  15.],
        [  0., 128.,   0.,   0.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0078, 0.9922, 0.0000, 0.0000])             
Predicted per class: tensor([ 28., 468.,   0.,  16.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:101) in                         1.5 s.
(epoch: 2, batches: 50, time: 0.002, data: 0.003) loss_real: 1.263 loss_move: 0.254 loss_random: 0.043 loss_scanline: 0.082 loss: 1.642 acc_real: 0.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(0.8203)
tensor([[18., 46.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 2 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 92., 36.,  0.],
        [ 0., 93., 31.,  4.],
        [14., 60., 31., 23.],
        [ 0., 80., 48.,  0.]])
Overall accuracy: 0.24
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.7266, 0.2422, 0.0000])             
Predicted per class: tensor([ 14., 325., 146.,  27.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:201) in                         1.6 s.
(epoch: 3, batches: 50, time: 0.002, data: 0.003) loss_real: 0.044 loss_move: 0.049 loss_random: 0.040 loss_scanline: 0.019 loss: 0.152 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 3 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 4, batches: 50, time: 0.002, data: 0.003) loss_real: 0.871 loss_move: 0.800 loss_random: 0.023 loss_scanline: 0.015 loss: 1.709 acc_real: 0.125 acc_move: 0.156 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[128.,   0.,   0.,   0.],
        [126.,   0.,   2.,   0.],
        [102.,   0.,  26.,   0.],
        [121.,   0.,   7.,   0.]])
Overall accuracy: 0.30
statistics per class: real, move, random, scanline:             
Accuracy: tensor([1.0000, 0.0000, 0.2031, 0.0000])             
Predicted per class: tensor([477.,   0.,  35.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:301) in                         1.6 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 4 / 300 	 Time Taken: 10 sec
accuracy: tensor(0.9961)
tensor([[63.,  1.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 5, batches: 50, time: 0.002, data: 0.003) loss_real: 0.219 loss_move: 0.031 loss_random: 0.015 loss_scanline: 0.013 loss: 0.279 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 5 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  1., 127.,   0.,   0.],
        [ 15.,  77.,  36.,   0.],
        [  0., 120.,   8.,   0.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9922, 0.2812, 0.0000])             
Predicted per class: tensor([ 16., 452.,  44.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:401) in                         1.6 s.
(epoch: 6, batches: 50, time: 0.002, data: 0.003) loss_real: 0.040 loss_move: 0.067 loss_random: 0.010 loss_scanline: 0.016 loss: 0.133 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 6 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 128.,   0.,   0.],
        [  6.,  79.,  34.,   9.],
        [  0., 116.,  12.,   0.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 1.0000, 0.2656, 0.0000])             
Predicted per class: tensor([  6., 451.,  46.,   9.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:501) in                         1.5 s.
(epoch: 7, batches: 50, time: 0.002, data: 0.000) loss_real: 0.078 loss_move: 0.019 loss_random: 0.009 loss_scanline: 0.009 loss: 0.115 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 7 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 8, batches: 50, time: 0.003, data: 0.003) loss_real: 0.018 loss_move: 0.035 loss_random: 0.004 loss_scanline: 0.006 loss: 0.063 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 128.,   0.,   0.],
        [  8., 107.,  12.,   1.],
        [  0., 122.,   1.,   5.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 1.0000, 0.0938, 0.0391])             
Predicted per class: tensor([  8., 485.,  13.,   6.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:601) in                         1.4 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 8 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 9, batches: 50, time: 0.002, data: 0.003) loss_real: 0.216 loss_move: 0.012 loss_random: 0.005 loss_scanline: 0.007 loss: 0.240 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 16.,  99.,  13.,   0.],
        [  7., 109.,  11.,   1.],
        [ 14.,  53.,  16.,  45.],
        [ 10.,  97.,  11.,  10.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.1250, 0.8516, 0.1250, 0.0781])             
Predicted per class: tensor([ 47., 358.,  51.,  56.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:701) in                         1.6 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 9 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 10, batches: 50, time: 0.002, data: 0.003) loss_real: 0.017 loss_move: 0.008 loss_random: 0.003 loss_scanline: 0.003 loss: 0.031 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 10 / 300 	 Time Taken: 9 sec
accuracy: tensor(0.9766)
tensor([[58.,  6.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 39., 89.,  0.],
        [ 0., 42., 79.,  7.],
        [ 0., 25., 55., 48.],
        [ 0., 35., 82., 11.]])
Overall accuracy: 0.21
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.3281, 0.4297, 0.0859])             
Predicted per class: tensor([  0., 141., 305.,  66.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:801) in                         1.6 s.
(epoch: 11, batches: 50, time: 0.002, data: 0.004) loss_real: 0.052 loss_move: 0.021 loss_random: 0.004 loss_scanline: 0.006 loss: 0.083 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 11 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   1.,   0., 127.],
        [  0.,   5.,   0., 123.],
        [  0.,  34.,   0.,  94.],
        [  0.,  22.,   0., 106.]])
Overall accuracy: 0.22
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0391, 0.0000, 0.8281])             
Predicted per class: tensor([  0.,  62.,   0., 450.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:901) in                         1.6 s.
(epoch: 12, batches: 50, time: 0.002, data: 0.003) loss_real: 1.221 loss_move: 0.025 loss_random: 0.008 loss_scanline: 0.014 loss: 1.268 acc_real: 0.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 12 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 13, batches: 50, time: 0.002, data: 0.000) loss_real: 0.046 loss_move: 0.016 loss_random: 0.003 loss_scanline: 0.005 loss: 0.070 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 127.,   1.,   0.],
        [  0., 124.,   4.,   0.],
        [  1.,  74.,  53.,   0.],
        [  0., 107.,  20.,   1.]])
Overall accuracy: 0.35
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9688, 0.4141, 0.0078])             
Predicted per class: tensor([  1., 432.,  78.,   1.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:1001) in                         1.8 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 13 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 14, batches: 50, time: 0.002, data: 0.005) loss_real: 0.028 loss_move: 2.441 loss_random: 0.004 loss_scanline: 0.007 loss: 2.479 acc_real: 1.000 acc_move: 0.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 14 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[128.,   0.,   0.,   0.],
        [128.,   0.,   0.,   0.],
        [119.,   2.,   7.,   0.],
        [127.,   0.,   1.,   0.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([1.0000, 0.0000, 0.0547, 0.0000])             
Predicted per class: tensor([502.,   2.,   8.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:1101) in                         1.6 s.
(epoch: 15, batches: 50, time: 0.002, data: 0.003) loss_real: 0.011 loss_move: 0.007 loss_random: 0.001 loss_scanline: 0.004 loss: 0.024 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 15 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   1., 127.,   0.],
        [  0.,   0., 128.,   0.],
        [  1.,  27., 100.,   0.],
        [  0.,   0., 128.,   0.]])
Overall accuracy: 0.20
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.7812, 0.0000])             
Predicted per class: tensor([  1.,  28., 483.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:1201) in                         1.8 s.
(epoch: 16, batches: 50, time: 0.002, data: 0.003) loss_real: 0.009 loss_move: 0.009 loss_random: 0.003 loss_scanline: 0.002 loss: 0.022 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 16 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 17, batches: 50, time: 0.002, data: 0.003) loss_real: 0.006 loss_move: 0.003 loss_random: 0.002 loss_scanline: 0.001 loss: 0.014 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 121.,   4.,   3.],
        [  3., 112.,   7.,   6.],
        [  5.,  66.,  40.,  17.],
        [  0.,  94.,  20.,  14.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.8750, 0.3125, 0.1094])             
Predicted per class: tensor([  8., 393.,  71.,  40.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:1301) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 17 / 300 	 Time Taken: 11 sec
accuracy: tensor(0.7500)
tensor([[64.,  0.,  0.,  0.],
        [64.,  0.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 18, batches: 50, time: 0.002, data: 0.003) loss_real: 0.030 loss_move: 0.005 loss_random: 0.009 loss_scanline: 0.002 loss: 0.047 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  2., 126.,   0.,   0.],
        [  5., 106.,  17.,   0.],
        [  0., 128.,   0.,   0.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9844, 0.1328, 0.0000])             
Predicted per class: tensor([  7., 488.,  17.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:1401) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 18 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 19, batches: 50, time: 0.002, data: 0.000) loss_real: 0.009 loss_move: 0.005 loss_random: 0.001 loss_scanline: 0.008 loss: 0.023 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 19 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 128.,   0.],
        [  0.,   4., 118.,   6.],
        [  0.,   8., 100.,  20.],
        [  0.,   3., 124.,   1.]])
Overall accuracy: 0.21
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0312, 0.7812, 0.0078])             
Predicted per class: tensor([  0.,  15., 470.,  27.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:1501) in                         1.7 s.
(epoch: 20, batches: 50, time: 0.002, data: 0.006) loss_real: 0.083 loss_move: 0.085 loss_random: 0.001 loss_scanline: 0.036 loss: 0.206 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 20 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[47., 81.,  0.,  0.],
        [50., 78.,  0.,  0.],
        [73., 55.,  0.,  0.],
        [41., 87.,  0.,  0.]])
Overall accuracy: 0.24
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.3672, 0.6094, 0.0000, 0.0000])             
Predicted per class: tensor([211., 301.,   0.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:1601) in                         1.5 s.
(epoch: 21, batches: 50, time: 0.003, data: 0.003) loss_real: 0.008 loss_move: 0.013 loss_random: 0.002 loss_scanline: 0.007 loss: 0.030 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 21 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 22, batches: 50, time: 0.002, data: 0.003) loss_real: 0.003 loss_move: 0.003 loss_random: 0.002 loss_scanline: 0.001 loss: 0.010 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 128.,   0.,   0.],
        [  2., 110.,   7.,   9.],
        [  0., 127.,   0.,   1.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 1.0000, 0.0547, 0.0078])             
Predicted per class: tensor([  2., 493.,   7.,  10.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:1701) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 22 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 23, batches: 50, time: 0.002, data: 0.002) loss_real: 0.002 loss_move: 1.099 loss_random: 0.001 loss_scanline: 0.005 loss: 1.107 acc_real: 1.000 acc_move: 0.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 23 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[128.,   0.,   0.,   0.],
        [127.,   0.,   0.,   1.],
        [112.,   2.,  13.,   1.],
        [115.,   2.,   8.,   3.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([1.0000, 0.0000, 0.1016, 0.0234])             
Predicted per class: tensor([482.,   4.,  21.,   5.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:1801) in                         1.6 s.
(epoch: 24, batches: 50, time: 0.002, data: 0.003) loss_real: 0.007 loss_move: 0.003 loss_random: 0.003 loss_scanline: 0.001 loss: 0.014 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 24 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0.,  0., 69., 59.],
        [ 0.,  0., 85., 43.],
        [ 1., 12., 81., 34.],
        [ 0.,  2., 71., 55.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.6328, 0.4297])             
Predicted per class: tensor([  1.,  14., 306., 191.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:1901) in                         1.6 s.
(epoch: 25, batches: 50, time: 0.002, data: 0.003) loss_real: 0.811 loss_move: 0.009 loss_random: 0.002 loss_scanline: 0.001 loss: 0.824 acc_real: 0.891 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 25 / 300 	 Time Taken: 10 sec
accuracy: tensor(0.7500)
tensor([[64.,  0.,  0.,  0.],
        [64.,  0.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 26, batches: 50, time: 0.002, data: 0.003) loss_real: 0.068 loss_move: 4.775 loss_random: 0.001 loss_scanline: 0.001 loss: 4.845 acc_real: 1.000 acc_move: 0.000 acc_scanline: 1.000 acc_random: 1.000 
Confusion matrix:
tensor([[  0., 115.,  13.,   0.],
        [  5.,  98.,  25.,   0.],
        [ 12.,  90.,  26.,   0.],
        [  0.,  89.,  39.,   0.]])
Overall accuracy: 0.24
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.7656, 0.2031, 0.0000])             
Predicted per class: tensor([ 17., 392., 103.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:2001) in                         1.8 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 26 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 27, batches: 50, time: 0.002, data: 0.003) loss_real: 0.010 loss_move: 0.015 loss_random: 0.001 loss_scanline: 0.001 loss: 0.027 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  3., 121.,   4.,   0.],
        [ 12.,  92.,  24.,   0.],
        [  0., 114.,  14.,   0.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9453, 0.1875, 0.0000])             
Predicted per class: tensor([ 15., 455.,  42.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:2101) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 27 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 28, batches: 50, time: 0.002, data: 0.003) loss_real: 0.008 loss_move: 0.020 loss_random: 0.001 loss_scanline: 0.103 loss: 0.132 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 28 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 54., 74.,  0.],
        [ 2., 35., 91.,  0.],
        [17., 31., 80.,  0.],
        [ 0., 32., 96.,  0.]])
Overall accuracy: 0.22
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.2734, 0.6250, 0.0000])             
Predicted per class: tensor([ 19., 152., 341.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:2201) in                         1.6 s.
(epoch: 29, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.005 loss_random: 0.001 loss_scanline: 0.001 loss: 0.008 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 29 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 124.,   1.,   3.],
        [  2.,  97.,  18.,  11.],
        [  0., 110.,   7.,  11.]])
Overall accuracy: 0.30
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9688, 0.1406, 0.0859])             
Predicted per class: tensor([  2., 459.,  26.,  25.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:2301) in                         1.8 s.
(epoch: 30, batches: 50, time: 0.002, data: 0.000) loss_real: 0.001 loss_move: 0.001 loss_random: 0.001 loss_scanline: 0.001 loss: 0.004 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 30 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 31, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.001 loss_random: 0.001 loss_scanline: 0.001 loss: 0.005 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 127.,   1.,   0.],
        [  1., 121.,   6.,   0.],
        [  3.,  75.,  40.,  10.],
        [  0., 105.,  22.,   1.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9453, 0.3125, 0.0078])             
Predicted per class: tensor([  4., 428.,  69.,  11.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:2401) in                         1.7 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 31 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 32, batches: 50, time: 0.002, data: 0.003) loss_real: 0.190 loss_move: 0.071 loss_random: 0.006 loss_scanline: 0.021 loss: 0.287 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 32 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[94., 34.,  0.,  0.],
        [95., 33.,  0.,  0.],
        [73., 43., 12.,  0.],
        [77., 51.,  0.,  0.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.7344, 0.2578, 0.0938, 0.0000])             
Predicted per class: tensor([339., 161.,  12.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:2501) in                         1.5 s.
(epoch: 33, batches: 50, time: 0.002, data: 0.004) loss_real: 0.004 loss_move: 0.047 loss_random: 0.002 loss_scanline: 0.002 loss: 0.055 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 33 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 122.,   0.,   6.],
        [  0., 110.,   0.,  18.],
        [  0., 128.,   0.,   0.]])
Overall accuracy: 0.24
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9531, 0.0000, 0.0000])             
Predicted per class: tensor([  0., 488.,   0.,  24.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:2601) in                         1.5 s.
(epoch: 34, batches: 50, time: 0.002, data: 0.002) loss_real: 0.024 loss_move: 0.006 loss_random: 0.001 loss_scanline: 0.004 loss: 0.035 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 34 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 125.,   0.,   3.],
        [  0., 123.,   1.,   4.],
        [  0., 127.,   1.,   0.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9766, 0.0078, 0.0000])             
Predicted per class: tensor([  0., 503.,   2.,   7.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:2701) in                         1.7 s.
(epoch: 35, batches: 50, time: 0.002, data: 0.003) loss_real: 0.005 loss_move: 0.006 loss_random: 0.002 loss_scanline: 0.001 loss: 0.014 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 35 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 36, batches: 50, time: 0.002, data: 0.008) loss_real: 0.005 loss_move: 0.318 loss_random: 0.001 loss_scanline: 0.002 loss: 0.326 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 127.,   0.,   1.],
        [  0., 123.,   1.,   4.],
        [  2., 110.,   3.,  13.],
        [  0., 124.,   1.,   3.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9609, 0.0234, 0.0234])             
Predicted per class: tensor([  2., 484.,   5.,  21.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:2801) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 36 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 37, batches: 50, time: 0.002, data: 0.000) loss_real: 0.017 loss_move: 0.002 loss_random: 0.000 loss_scanline: 0.001 loss: 0.019 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 37 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 128.,   0.,   0.],
        [  6., 113.,   8.,   1.],
        [  0., 128.,   0.,   0.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 1.0000, 0.0625, 0.0000])             
Predicted per class: tensor([  6., 497.,   8.,   1.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:2901) in                         1.4 s.
(epoch: 38, batches: 50, time: 0.002, data: 0.004) loss_real: 0.003 loss_move: 0.009 loss_random: 0.003 loss_scanline: 0.001 loss: 0.016 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 38 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 124.,   2.,   2.],
        [  0., 115.,  10.,   3.],
        [  1.,  75.,  49.,   3.],
        [  0., 111.,  12.,   5.]])
Overall accuracy: 0.33
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.8984, 0.3828, 0.0391])             
Predicted per class: tensor([  1., 425.,  73.,  13.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:3001) in                         1.7 s.
(epoch: 39, batches: 50, time: 0.002, data: 0.003) loss_real: 0.018 loss_move: 0.011 loss_random: 0.001 loss_scanline: 0.002 loss: 0.033 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 39 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 40, batches: 50, time: 0.002, data: 0.000) loss_real: 0.002 loss_move: 0.003 loss_random: 0.002 loss_scanline: 0.001 loss: 0.008 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,  27.,   0., 101.],
        [  0.,  30.,   1.,  97.],
        [ 13.,  21.,  15.,  79.],
        [  2.,  20.,   0., 106.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.2344, 0.1172, 0.8281])             
Predicted per class: tensor([ 15.,  98.,  16., 383.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:3101) in                         1.6 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 40 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 41, batches: 50, time: 0.003, data: 0.005) loss_real: 0.001 loss_move: 0.004 loss_random: 0.001 loss_scanline: 0.001 loss: 0.007 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 41 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   1.,   0., 127.],
        [  2.,   7.,   0., 119.],
        [  7.,  23.,  21.,  77.],
        [  0.,  10.,   3., 115.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0547, 0.1641, 0.8984])             
Predicted per class: tensor([  9.,  41.,  24., 438.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:3201) in                         1.5 s.
(epoch: 42, batches: 50, time: 0.002, data: 0.019) loss_real: 0.001 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 42 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 128.,   0.,   0.],
        [  0.,  87.,  36.,   5.],
        [  0., 127.,   1.,   0.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 1.0000, 0.2812, 0.0000])             
Predicted per class: tensor([  0., 470.,  37.,   5.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:3301) in                         1.5 s.
(epoch: 43, batches: 50, time: 0.002, data: 0.003) loss_real: 0.007 loss_move: 0.040 loss_random: 0.001 loss_scanline: 0.000 loss: 0.048 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 43 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,   0., 128.],
        [  0.,   0.,  17., 111.],
        [  0.,   0.,   0., 128.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.1328, 1.0000])             
Predicted per class: tensor([  0.,   0.,  17., 495.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:3401) in                         1.6 s.
(epoch: 44, batches: 50, time: 0.002, data: 0.003) loss_real: 0.007 loss_move: 0.005 loss_random: 0.001 loss_scanline: 0.003 loss: 0.016 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 44 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 45, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.004 loss_random: 0.053 loss_scanline: 0.001 loss: 0.060 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 128.,   0.],
        [  3.,   3., 122.,   0.],
        [  2.,   2., 123.,   1.],
        [  0.,   0., 128.,   0.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0234, 0.9609, 0.0000])             
Predicted per class: tensor([  5.,   5., 501.,   1.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:3501) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 45 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 46, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.002 loss_random: 0.000 loss_scanline: 0.001 loss: 0.005 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 46 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 128.,   0.],
        [  3.,   0., 125.,   0.],
        [ 40.,   1.,  86.,   1.],
        [  0.,   0., 128.,   0.]])
Overall accuracy: 0.17
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.6719, 0.0000])             
Predicted per class: tensor([ 43.,   1., 467.,   1.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:3601) in                         1.7 s.
(epoch: 47, batches: 50, time: 0.002, data: 0.007) loss_real: 0.504 loss_move: 0.003 loss_random: 0.001 loss_scanline: 0.003 loss: 0.511 acc_real: 0.984 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 47 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[97., 31.,  0.,  0.],
        [91., 37.,  0.,  0.],
        [53., 75.,  0.,  0.],
        [76., 52.,  0.,  0.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.7578, 0.2891, 0.0000, 0.0000])             
Predicted per class: tensor([317., 195.,   0.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:3701) in                         1.6 s.
(epoch: 48, batches: 50, time: 0.002, data: 0.000) loss_real: 0.003 loss_move: 0.010 loss_random: 0.004 loss_scanline: 0.001 loss: 0.019 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 48 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 49, batches: 50, time: 0.002, data: 0.003) loss_real: 0.003 loss_move: 0.002 loss_random: 0.001 loss_scanline: 0.001 loss: 0.006 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 90.,  7., 31.],
        [ 0., 88., 16., 24.],
        [ 6., 46., 61., 15.],
        [ 0., 78., 12., 38.]])
Overall accuracy: 0.37
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.6875, 0.4766, 0.2969])             
Predicted per class: tensor([  6., 302.,  96., 108.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:3801) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 49 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 50, batches: 50, time: 0.002, data: 0.003) loss_real: 0.025 loss_move: 0.002 loss_random: 0.001 loss_scanline: 0.002 loss: 0.030 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 50 / 300 	 Time Taken: 9 sec
Confusion matrix:
tensor([[128.,   0.,   0.,   0.],
        [121.,   6.,   0.,   1.],
        [109.,  13.,   4.,   2.],
        [125.,   0.,   1.,   2.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([1.0000, 0.0469, 0.0312, 0.0156])             
Predicted per class: tensor([483.,  19.,   5.,   5.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:3901) in                         1.9 s.
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 51, batches: 50, time: 0.003, data: 0.003) loss_real: 0.001 loss_move: 0.003 loss_random: 0.001 loss_scanline: 0.001 loss: 0.006 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 51 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[58., 62.,  0.,  8.],
        [63., 60.,  1.,  4.],
        [84., 34.,  3.,  7.],
        [50., 64.,  4., 10.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.4531, 0.4688, 0.0234, 0.0781])             
Predicted per class: tensor([255., 220.,   8.,  29.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:4001) in                         1.7 s.
(epoch: 52, batches: 50, time: 0.002, data: 0.003) loss_real: 0.006 loss_move: 0.002 loss_random: 0.000 loss_scanline: 0.001 loss: 0.010 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(0.9961)
tensor([[63.,  1.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 52 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 123.,   5.,   0.],
        [  0., 118.,   6.,   4.],
        [  6.,  69.,  47.,   6.],
        [  0.,  97.,  31.,   0.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9219, 0.3672, 0.0000])             
Predicted per class: tensor([  6., 407.,  89.,  10.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:4101) in                         1.4 s.
(epoch: 53, batches: 50, time: 0.002, data: 0.006) loss_real: 0.086 loss_move: 0.050 loss_random: 0.003 loss_scanline: 0.001 loss: 0.139 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 53 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 54, batches: 50, time: 0.002, data: 0.008) loss_real: 0.001 loss_move: 0.001 loss_random: 0.001 loss_scanline: 0.001 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 10., 118.,   0.,   0.],
        [ 14., 110.,   1.,   3.],
        [ 34.,  67.,  11.,  16.],
        [ 24.,  98.,   4.,   2.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0781, 0.8594, 0.0859, 0.0156])             
Predicted per class: tensor([ 82., 393.,  16.,  21.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:4201) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 54 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 55, batches: 50, time: 0.002, data: 0.000) loss_real: 0.001 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 55 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  2.,   1.,   1., 124.],
        [ 18.,  13.,  15.,  82.],
        [  1.,   2.,  10., 115.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0078, 0.1172, 0.8984])             
Predicted per class: tensor([ 21.,  16.,  26., 449.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:4301) in                         1.5 s.
(epoch: 56, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 56 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 122.,   0.,   6.],
        [  0., 125.,   0.,   3.],
        [ 22.,  83.,  17.,   6.],
        [  0., 115.,   6.,   7.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9766, 0.1328, 0.0547])             
Predicted per class: tensor([ 22., 445.,  23.,  22.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:4401) in                         1.6 s.
(epoch: 57, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 57 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 58, batches: 50, time: 0.002, data: 0.003) loss_real: 0.007 loss_move: 0.000 loss_random: 0.001 loss_scanline: 0.064 loss: 0.072 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  2.,   1.,   2., 123.],
        [ 15.,   2.,   8., 103.],
        [  0.,   3.,  12., 113.]])
Overall accuracy: 0.24
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0078, 0.0625, 0.8828])             
Predicted per class: tensor([ 17.,   6.,  22., 467.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:4501) in                         1.6 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 58 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 59, batches: 50, time: 0.002, data: 0.003) loss_real: 0.005 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.001 loss: 0.007 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 67.,  0., 61.],
        [ 1., 77.,  1., 49.],
        [17., 39., 19., 53.],
        [ 1., 54., 16., 57.]])
Overall accuracy: 0.30
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.6016, 0.1484, 0.4453])             
Predicted per class: tensor([ 19., 237.,  36., 220.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:4601) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 59 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 60, batches: 50, time: 0.002, data: 0.003) loss_real: 0.031 loss_move: 0.002 loss_random: 0.000 loss_scanline: 0.000 loss: 0.033 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 60 / 300 	 Time Taken: 8 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,  17.,   0., 111.],
        [  4.,  20.,   0., 104.],
        [ 24.,  17.,   3.,  84.],
        [  0.,  26.,   5.,  97.]])
Overall accuracy: 0.23
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.1562, 0.0234, 0.7578])             
Predicted per class: tensor([ 28.,  80.,   8., 396.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:4701) in                         1.6 s.
(epoch: 61, batches: 50, time: 0.002, data: 0.000) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.001 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 61 / 300 	 Time Taken: 10 sec
accuracy: tensor(0.9961)
tensor([[63.,  1.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[60.,  0., 38., 30.],
        [53.,  0., 52., 23.],
        [37.,  0., 53., 38.],
        [58.,  0., 34., 36.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.4688, 0.0000, 0.4141, 0.2812])             
Predicted per class: tensor([208.,   0., 177., 127.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:4801) in                         1.6 s.
(epoch: 62, batches: 50, time: 0.002, data: 0.003) loss_real: 0.025 loss_move: 0.016 loss_random: 0.001 loss_scanline: 0.002 loss: 0.045 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 62 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 63, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.002 loss_random: 0.000 loss_scanline: 0.001 loss: 0.004 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  2.,   0.,   6., 120.],
        [ 30.,   0.,  15.,  83.],
        [  4.,   0.,  10., 114.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.1172, 0.8906])             
Predicted per class: tensor([ 36.,   0.,  31., 445.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:4901) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 63 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 64, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.002 loss_random: 0.001 loss_scanline: 0.000 loss: 0.005 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 64 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[86.,  0.,  4., 38.],
        [89.,  0.,  4., 35.],
        [80.,  0.,  6., 42.],
        [74.,  1.,  3., 50.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.6719, 0.0000, 0.0469, 0.3906])             
Predicted per class: tensor([329.,   1.,  17., 165.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:5001) in                         1.4 s.
(epoch: 65, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.001 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 65 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 114.,  14.],
        [  4.,   0., 103.,  21.],
        [ 39.,   5.,  66.,  18.],
        [  9.,   1., 104.,  14.]])
Overall accuracy: 0.16
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.5156, 0.1094])             
Predicted per class: tensor([ 52.,   6., 387.,  67.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:5101) in                         1.6 s.
(epoch: 66, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 66 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 67, batches: 50, time: 0.002, data: 0.003) loss_real: 0.007 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.008 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0.,  0., 42., 86.],
        [ 2.,  0., 40., 86.],
        [ 4.,  0., 75., 49.],
        [ 3.,  0., 48., 77.]])
Overall accuracy: 0.30
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.5859, 0.6016])             
Predicted per class: tensor([  9.,   0., 205., 298.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:5201) in                         1.8 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 67 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 68, batches: 50, time: 0.002, data: 0.003) loss_real: 0.004 loss_move: 0.002 loss_random: 0.000 loss_scanline: 0.001 loss: 0.006 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 126.,   2.],
        [  0.,   7., 119.,   2.],
        [  1.,  43.,  75.,   9.],
        [  0.,   1., 118.,   9.]])
Overall accuracy: 0.18
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0547, 0.5859, 0.0703])             
Predicted per class: tensor([  1.,  51., 438.,  22.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:5301) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 68 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 69, batches: 50, time: 0.002, data: 0.003) loss_real: 0.016 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.001 loss: 0.019 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 69 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,   7., 121.],
        [  1.,   2.,  49.,  76.],
        [  0.,   1.,  12., 115.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.3828, 0.8984])             
Predicted per class: tensor([  1.,   3.,  68., 440.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:5401) in                         1.6 s.
(epoch: 70, batches: 50, time: 0.002, data: 0.003) loss_real: 0.004 loss_move: 0.003 loss_random: 0.000 loss_scanline: 0.001 loss: 0.008 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 70 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 119.,   0.,   9.],
        [  0., 116.,   0.,  12.],
        [  0.,  83.,  14.,  31.],
        [  0., 108.,   0.,  20.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9062, 0.1094, 0.1562])             
Predicted per class: tensor([  0., 426.,  14.,  72.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:5501) in                         1.6 s.
(epoch: 71, batches: 50, time: 0.002, data: 0.004) loss_real: 0.005 loss_move: 0.003 loss_random: 0.000 loss_scanline: 0.002 loss: 0.010 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 71 / 300 	 Time Taken: 11 sec
accuracy: tensor(0.7500)
tensor([[64.,  0.,  0.,  0.],
        [64.,  0.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 72, batches: 50, time: 0.002, data: 0.003) loss_real: 0.006 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.009 loss: 0.016 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 127.,   0.,   1.],
        [  0., 124.,   0.,   4.],
        [  0., 111.,   0.,  17.],
        [  0., 122.,   2.,   4.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9688, 0.0000, 0.0312])             
Predicted per class: tensor([  0., 484.,   2.,  26.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:5601) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 72 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 73, batches: 50, time: 0.002, data: 0.003) loss_real: 0.004 loss_move: 0.002 loss_random: 0.000 loss_scanline: 0.000 loss: 0.006 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 73 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  1.,   0.,   2., 125.],
        [  7.,   6.,  10., 105.],
        [  0.,   2.,   6., 120.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.0781, 0.9375])             
Predicted per class: tensor([  8.,   8.,  18., 478.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:5701) in                         1.6 s.
(epoch: 74, batches: 50, time: 0.002, data: 0.003) loss_real: 0.004 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.005 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 74 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 126.,   1.,   1.],
        [  9.,  73.,  25.,  21.],
        [  0., 110.,  18.,   0.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9844, 0.1953, 0.0000])             
Predicted per class: tensor([  9., 437.,  44.,  22.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:5801) in                         1.8 s.
(epoch: 75, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.003 loss: 0.006 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 75 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 76, batches: 50, time: 0.003, data: 0.003) loss_real: 0.001 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.001 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
Confusion matrix:
tensor([[ 0., 89., 39.,  0.],
        [ 2., 78., 48.,  0.],
        [16., 74., 37.,  1.],
        [ 0., 70., 57.,  1.]])
Overall accuracy: 0.23
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.6094, 0.2891, 0.0078])             
Predicted per class: tensor([ 18., 311., 181.,   2.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:5901) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 76 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 77, batches: 50, time: 0.002, data: 0.009) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 128.,   0.,   0.],
        [  0., 117.,  11.,   0.],
        [  0., 124.,   4.,   0.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 1.0000, 0.0859, 0.0000])             
Predicted per class: tensor([  0., 497.,  15.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:6001) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 77 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 78, batches: 50, time: 0.002, data: 0.003) loss_real: 0.015 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.001 loss: 0.016 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 78 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[47.,  0.,  0., 81.],
        [47.,  4.,  0., 77.],
        [48.,  7.,  0., 73.],
        [30.,  1.,  0., 97.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.3672, 0.0312, 0.0000, 0.7578])             
Predicted per class: tensor([172.,  12.,   0., 328.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:6101) in                         1.4 s.
(epoch: 79, batches: 50, time: 0.002, data: 0.005) loss_real: 0.001 loss_move: 0.009 loss_random: 0.000 loss_scanline: 0.055 loss: 0.066 acc_real: 1.000 acc_move: 1.000 acc_scanline: 0.984 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 79 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,   1., 127.],
        [  0.,   0.,  19., 109.],
        [  0.,   0.,   4., 124.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.1484, 0.9688])             
Predicted per class: tensor([  0.,   0.,  24., 488.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:6201) in                         1.4 s.
(epoch: 80, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.004 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 80 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 81, batches: 50, time: 0.002, data: 0.003) loss_real: 0.007 loss_move: 0.004 loss_random: 0.001 loss_scanline: 0.000 loss: 0.013 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,   0., 128.],
        [  0.,   2.,   1., 125.],
        [  0.,   0.,   0., 128.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.0078, 1.0000])             
Predicted per class: tensor([  0.,   2.,   1., 509.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:6301) in                         1.7 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 81 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 82, batches: 50, time: 0.002, data: 0.002) loss_real: 0.001 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 82 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0.,  0., 66., 62.],
        [ 0.,  4., 67., 57.],
        [ 2., 26., 34., 66.],
        [ 0.,  0., 55., 73.]])
Overall accuracy: 0.22
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0312, 0.2656, 0.5703])             
Predicted per class: tensor([  2.,  30., 222., 258.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:6401) in                         1.5 s.
(epoch: 83, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.003 loss_random: 0.001 loss_scanline: 0.001 loss: 0.005 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 83 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 126.,   1.,   1.],
        [  6., 113.,   7.,   2.],
        [ 12.,  89.,  18.,   9.],
        [  0.,  99.,  28.,   1.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.8828, 0.1406, 0.0078])             
Predicted per class: tensor([ 18., 427.,  54.,  13.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:6501) in                         1.6 s.
(epoch: 84, batches: 50, time: 0.002, data: 0.000) loss_real: 0.001 loss_move: 0.000 loss_random: 0.002 loss_scanline: 0.000 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 84 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 59., 69.,  0.],
        [ 7., 42., 78.,  1.],
        [ 8., 52., 67.,  1.],
        [ 0., 49., 79.,  0.]])
Overall accuracy: 0.21
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.3281, 0.5234, 0.0000])             
Predicted per class: tensor([ 15., 202., 293.,   2.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:6601) in                         1.5 s.
(epoch: 85, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 85 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 86, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.002 loss_random: 0.000 loss_scanline: 0.000 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 128.,   0.],
        [  0.,   0., 128.,   0.],
        [  0.,   0., 128.,   0.],
        [  0.,   0., 128.,   0.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0., 0., 1., 0.])             
Predicted per class: tensor([  0.,   0., 512.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:6701) in                         1.5 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 86 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 87, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 87 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   1., 127.],
        [  3.,   0.,  14., 111.],
        [  3.,   0.,  59.,  66.],
        [  0.,   0.,  25., 103.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.4609, 0.8047])             
Predicted per class: tensor([  6.,   0.,  99., 407.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:6801) in                         1.8 s.
(epoch: 88, batches: 50, time: 0.002, data: 0.005) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 88 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 126.,   2.],
        [  3.,   0., 123.,   2.],
        [  9.,   1., 115.,   3.],
        [  1.,   0., 124.,   3.]])
Overall accuracy: 0.23
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.8984, 0.0234])             
Predicted per class: tensor([ 13.,   1., 488.,  10.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:6901) in                         1.6 s.
(epoch: 89, batches: 50, time: 0.002, data: 0.004) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 89 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 90, batches: 50, time: 0.002, data: 0.000) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,  12., 115.,   1.],
        [  3.,  12., 112.,   1.],
        [  8.,  10., 104.,   6.],
        [  0.,   6., 121.,   1.]])
Overall accuracy: 0.23
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0938, 0.8125, 0.0078])             
Predicted per class: tensor([ 11.,  40., 452.,   9.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:7001) in                         1.7 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 90 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 91, batches: 50, time: 0.002, data: 0.004) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 91 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   6.,  19., 103.],
        [  2.,  10.,  31.,  85.],
        [ 11.,   7.,  30.,  80.],
        [  0.,   9.,  30.,  89.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0781, 0.2344, 0.6953])             
Predicted per class: tensor([ 13.,  32., 110., 357.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:7101) in                         1.6 s.
(epoch: 92, batches: 50, time: 0.002, data: 0.004) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 92 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  1.,   0.,   0., 127.],
        [  6.,   1.,   6., 115.],
        [  0.,   0.,   3., 125.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.0469, 0.9766])             
Predicted per class: tensor([  7.,   1.,   9., 495.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:7201) in                         1.7 s.
(epoch: 93, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 93 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 123.,   5.],
        [  0.,   2., 114.,  12.],
        [ 15.,   2.,  91.,  20.],
        [  2.,   1., 115.,  10.]])
Overall accuracy: 0.20
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0156, 0.7109, 0.0781])             
Predicted per class: tensor([ 17.,   5., 443.,  47.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:7301) in                         1.7 s.
(epoch: 94, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.004 loss_random: 0.004 loss_scanline: 0.001 loss: 0.010 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 94 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 95, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.004 loss_random: 0.001 loss_scanline: 0.002 loss: 0.008 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   1., 126.,   1.],
        [  0.,   1., 123.,   4.],
        [  0.,  17.,  76.,  35.],
        [  0.,   6., 119.,   3.]])
Overall accuracy: 0.16
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0078, 0.5938, 0.0234])             
Predicted per class: tensor([  0.,  25., 444.,  43.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:7401) in                         1.6 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 95 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 96, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.011 loss_random: 0.000 loss_scanline: 0.000 loss: 0.013 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 96 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,  12., 116.,   0.],
        [  0.,  14., 114.,   0.],
        [  9.,  31.,  77.,  11.],
        [  0.,  25., 103.,   0.]])
Overall accuracy: 0.18
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.1094, 0.6016, 0.0000])             
Predicted per class: tensor([  9.,  82., 410.,  11.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:7501) in                         1.5 s.
(epoch: 97, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.001 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0002000 -> 0.0002000
End of epoch 97 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  2.,   6., 119.,   1.],
        [  1.,   2., 125.,   0.],
        [  1.,   8., 101.,  18.],
        [  0.,   9., 118.,   1.]])
Overall accuracy: 0.21
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0156, 0.0156, 0.7891, 0.0078])             
Predicted per class: tensor([  4.,  25., 463.,  20.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:7601) in                         1.6 s.
(epoch: 98, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.001 loss_random: 0.001 loss_scanline: 0.000 loss: 0.004 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 98 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 99, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.019 loss_scanline: 0.001 loss: 0.020 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 55., 73.,  0.],
        [ 0., 42., 78.,  8.],
        [ 6., 39., 48., 35.],
        [ 0., 51., 76.,  1.]])
Overall accuracy: 0.18
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.3281, 0.3750, 0.0078])             
Predicted per class: tensor([  6., 187., 275.,  44.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:7701) in                         1.4 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 99 / 300 	 Time Taken: 12 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 100, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.003 loss_random: 0.000 loss_scanline: 0.002 loss: 0.006 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
saving the model at the end of epoch 100, iters 499200
learning rate 0.0002000 -> 0.0001990
End of epoch 100 / 300 	 Time Taken: 9 sec
Confusion matrix:
tensor([[  1.,   1., 126.,   0.],
        [  2.,   2., 124.,   0.],
        [ 23.,  20.,  85.,   0.],
        [  0.,   5., 122.,   1.]])
Overall accuracy: 0.17
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0078, 0.0156, 0.6641, 0.0078])             
Predicted per class: tensor([ 26.,  28., 457.,   1.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:7801) in                         1.9 s.
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 101, batches: 50, time: 0.003, data: 0.003) loss_real: 0.013 loss_move: 0.002 loss_random: 0.001 loss_scanline: 0.008 loss: 0.024 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001990 -> 0.0001980
End of epoch 101 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 124.,   0.,   4.],
        [  2., 115.,   2.,   9.],
        [  7.,  89.,   5.,  27.],
        [  0., 118.,   3.,   7.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.8984, 0.0391, 0.0547])             
Predicted per class: tensor([  9., 446.,  10.,  47.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:7901) in                         1.4 s.
(epoch: 102, batches: 50, time: 0.002, data: 0.003) loss_real: 0.003 loss_move: 0.003 loss_random: 0.000 loss_scanline: 0.000 loss: 0.006 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001980 -> 0.0001970
End of epoch 102 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 68., 17., 43.],
        [ 0., 69., 15., 44.],
        [ 0., 57., 46., 25.],
        [ 0., 55., 24., 49.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.5391, 0.3594, 0.3828])             
Predicted per class: tensor([  0., 249., 102., 161.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:8001) in                         1.6 s.
(epoch: 103, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.001 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001970 -> 0.0001960
End of epoch 103 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 104, batches: 50, time: 0.002, data: 0.003) loss_real: 0.013 loss_move: 0.000 loss_random: 0.006 loss_scanline: 0.001 loss: 0.019 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 127.,   0.,   1.],
        [  0., 120.,   5.,   3.],
        [  0., 119.,   7.,   2.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9922, 0.0391, 0.0156])             
Predicted per class: tensor([  0., 494.,  12.,   6.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:8101) in                         1.5 s.
learning rate 0.0001960 -> 0.0001950
End of epoch 104 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 105, batches: 50, time: 0.003, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.001 loss_scanline: 0.002 loss: 0.005 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001950 -> 0.0001940
End of epoch 105 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,  16.,   0., 112.],
        [  0.,  13.,   0., 115.],
        [  0.,  11.,  34.,  83.],
        [  0.,  19.,   0., 109.]])
Overall accuracy: 0.30
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.1016, 0.2656, 0.8516])             
Predicted per class: tensor([  0.,  59.,  34., 419.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:8201) in                         1.5 s.
(epoch: 106, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001940 -> 0.0001930
End of epoch 106 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,  32.,   2.,  94.],
        [  0.,  34.,   5.,  89.],
        [  0.,  14.,  14., 100.],
        [  0.,  21.,   4., 103.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.2656, 0.1094, 0.8047])             
Predicted per class: tensor([  0., 101.,  25., 386.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:8301) in                         1.5 s.
(epoch: 107, batches: 50, time: 0.002, data: 0.003) loss_real: 0.140 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.140 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001930 -> 0.0001920
End of epoch 107 / 300 	 Time Taken: 10 sec
accuracy: tensor(0.9805)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 59.,  0.,  5.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 108, batches: 50, time: 0.002, data: 0.002) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 128.,   0.],
        [  2.,   3., 121.,   2.],
        [ 10.,   3., 111.,   4.],
        [  0.,   1., 122.,   5.]])
Overall accuracy: 0.23
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0234, 0.8672, 0.0391])             
Predicted per class: tensor([ 12.,   7., 482.,  11.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:8401) in                         1.6 s.
learning rate 0.0001920 -> 0.0001910
End of epoch 108 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 109, batches: 50, time: 0.002, data: 0.005) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0.,  1., 42., 85.],
        [ 8.,  4., 47., 69.],
        [ 9.,  2., 45., 72.],
        [ 1.,  6., 50., 71.]])
Overall accuracy: 0.23
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0312, 0.3516, 0.5547])             
Predicted per class: tensor([ 18.,  13., 184., 297.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:8501) in                         1.4 s.
learning rate 0.0001910 -> 0.0001900
End of epoch 109 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 110, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001900 -> 0.0001891
End of epoch 110 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 1.,  4., 32., 91.],
        [ 1.,  5., 34., 88.],
        [ 0.,  5., 24., 99.],
        [ 0.,  0., 40., 88.]])
Overall accuracy: 0.23
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0078, 0.0391, 0.1875, 0.6875])             
Predicted per class: tensor([  2.,  14., 130., 366.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:8601) in                         1.4 s.
(epoch: 111, batches: 50, time: 0.002, data: 0.031) loss_real: 0.005 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.005 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001891 -> 0.0001881
End of epoch 111 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 96., 32.,  0.],
        [ 0., 87., 32.,  9.],
        [ 0., 53., 26., 49.],
        [ 0., 80., 40.,  8.]])
Overall accuracy: 0.24
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.6797, 0.2031, 0.0625])             
Predicted per class: tensor([  0., 316., 130.,  66.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:8701) in                         1.6 s.
(epoch: 112, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001881 -> 0.0001871
End of epoch 112 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 113, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 96., 32.,  0.],
        [ 0., 96., 25.,  7.],
        [ 0., 44., 36., 48.],
        [ 0., 81., 41.,  6.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.7500, 0.2812, 0.0469])             
Predicted per class: tensor([  0., 317., 134.,  61.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:8801) in                         1.5 s.
learning rate 0.0001871 -> 0.0001861
End of epoch 113 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 114, batches: 50, time: 0.003, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001861 -> 0.0001851
End of epoch 114 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 39., 72., 17.],
        [ 0., 46., 72., 10.],
        [ 0., 27., 59., 42.],
        [ 0., 29., 81., 18.]])
Overall accuracy: 0.24
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.3594, 0.4609, 0.1406])             
Predicted per class: tensor([  0., 141., 284.,  87.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:8901) in                         1.5 s.
(epoch: 115, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001851 -> 0.0001841
End of epoch 115 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   2., 121.,   5.],
        [  0.,   8., 114.,   6.],
        [  0.,   5.,  97.,  26.],
        [  0.,   3., 115.,  10.]])
Overall accuracy: 0.22
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0625, 0.7578, 0.0781])             
Predicted per class: tensor([  0.,  18., 447.,  47.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:9001) in                         1.6 s.
(epoch: 116, batches: 50, time: 0.002, data: 0.002) loss_real: 0.000 loss_move: 0.002 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001841 -> 0.0001831
End of epoch 116 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 117, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 125.,   3.,   0.],
        [  0., 112.,  13.,   3.],
        [  0.,  66.,  31.,  31.],
        [  0.,  96.,  28.,   4.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.8750, 0.2422, 0.0312])             
Predicted per class: tensor([  0., 399.,  75.,  38.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:9101) in                         1.5 s.
learning rate 0.0001831 -> 0.0001821
End of epoch 117 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 118, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   3.,   4., 121.],
        [  0.,   5.,   6., 117.],
        [  0.,   4.,  13., 111.],
        [  0.,   2.,  14., 112.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0391, 0.1016, 0.8750])             
Predicted per class: tensor([  0.,  14.,  37., 461.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:9201) in                         1.5 s.
learning rate 0.0001821 -> 0.0001811
End of epoch 118 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 119, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001811 -> 0.0001801
End of epoch 119 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 36.,  5., 87.],
        [ 0., 39., 15., 74.],
        [ 0., 17., 27., 84.],
        [ 0., 35., 11., 82.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.3047, 0.2109, 0.6406])             
Predicted per class: tensor([  0., 127.,  58., 327.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:9301) in                         1.6 s.
(epoch: 120, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001801 -> 0.0001791
End of epoch 120 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   5., 123.,   0.],
        [  0.,   9., 118.,   1.],
        [  0.,   5., 100.,  23.],
        [  0.,   2., 126.,   0.]])
Overall accuracy: 0.21
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0703, 0.7812, 0.0000])             
Predicted per class: tensor([  0.,  21., 467.,  24.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:9401) in                         1.5 s.
(epoch: 121, batches: 50, time: 0.002, data: 0.002) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001791 -> 0.0001781
End of epoch 121 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 122, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 95., 33.,  0.],
        [ 0., 65., 47., 16.],
        [ 0., 37., 53., 38.],
        [ 0., 61., 50., 17.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.5078, 0.4141, 0.1328])             
Predicted per class: tensor([  0., 258., 183.,  71.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:9501) in                         1.5 s.
learning rate 0.0001781 -> 0.0001771
End of epoch 122 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 123, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.001 loss_random: 0.001 loss_scanline: 0.019 loss: 0.021 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001771 -> 0.0001761
End of epoch 123 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 3., 14., 39., 72.],
        [ 1., 22., 43., 62.],
        [ 0., 35., 24., 69.],
        [ 1., 36., 25., 66.]])
Overall accuracy: 0.22
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0234, 0.1719, 0.1875, 0.5156])             
Predicted per class: tensor([  5., 107., 131., 269.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:9601) in                         1.4 s.
(epoch: 124, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.004 loss_random: 0.005 loss_scanline: 0.058 loss: 0.067 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001761 -> 0.0001751
End of epoch 124 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   4.,   0., 124.],
        [ 24.,  13.,   0.,  91.],
        [  0.,   0.,   0., 128.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0312, 0.0000, 1.0000])             
Predicted per class: tensor([ 24.,  17.,   0., 471.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:9701) in                         1.6 s.
(epoch: 125, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.001 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001751 -> 0.0001741
End of epoch 125 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 126, batches: 50, time: 0.005, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.011 loss: 0.012 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  4.,   0.,   5., 119.],
        [ 33.,   1.,  26.,  68.],
        [  2.,   1.,  12., 113.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.2031, 0.8828])             
Predicted per class: tensor([ 39.,   2.,  43., 428.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:9801) in                         1.4 s.
learning rate 0.0001741 -> 0.0001731
End of epoch 126 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 127, batches: 50, time: 0.002, data: 0.002) loss_real: 0.002 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,   2., 126.],
        [  6.,   4.,  20.,  98.],
        [  0.,   0.,   3., 125.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.1562, 0.9766])             
Predicted per class: tensor([  6.,   4.,  25., 477.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:9901) in                         1.5 s.
learning rate 0.0001731 -> 0.0001721
End of epoch 127 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 128, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001721 -> 0.0001711
End of epoch 128 / 300 	 Time Taken: 8 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   1.,   6., 121.],
        [  5.,  17.,  33.,  73.],
        [  0.,   0.,  11., 117.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0078, 0.2578, 0.9141])             
Predicted per class: tensor([  5.,  18.,  50., 439.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:10001) in                         1.4 s.
(epoch: 129, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001711 -> 0.0001701
End of epoch 129 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   1.,   0., 127.],
        [  0.,  17.,   2., 109.],
        [ 11.,  35.,  15.,  67.],
        [  0.,   4.,  15., 109.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.1328, 0.1172, 0.8516])             
Predicted per class: tensor([ 11.,  57.,  32., 412.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:10101) in                         1.5 s.
(epoch: 130, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001701 -> 0.0001692
End of epoch 130 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 131, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.001 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 12., 116.,   0.,   0.],
        [ 20., 108.,   0.,   0.],
        [  9., 106.,  13.,   0.],
        [ 13., 112.,   3.,   0.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0938, 0.8438, 0.1016, 0.0000])             
Predicted per class: tensor([ 54., 442.,  16.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:10201) in                         1.4 s.
learning rate 0.0001692 -> 0.0001682
End of epoch 131 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 132, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001682 -> 0.0001672
End of epoch 132 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[78.,  0., 41.,  9.],
        [89.,  0., 33.,  6.],
        [66.,  0., 58.,  4.],
        [56.,  0., 60., 12.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.6094, 0.0000, 0.4531, 0.0938])             
Predicted per class: tensor([289.,   0., 192.,  31.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:10301) in                         1.5 s.
(epoch: 133, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.005 loss_random: 0.000 loss_scanline: 0.000 loss: 0.005 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001672 -> 0.0001662
End of epoch 133 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   1., 127.,   0.],
        [  0.,   0., 128.,   0.],
        [  0.,   2., 125.,   1.],
        [  0.,   4., 124.,   0.]])
Overall accuracy: 0.24
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.9766, 0.0000])             
Predicted per class: tensor([  0.,   7., 504.,   1.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:10401) in                         1.4 s.
(epoch: 134, batches: 50, time: 0.002, data: 0.003) loss_real: 0.011 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.012 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001662 -> 0.0001652
End of epoch 134 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  2., 126.,   0.,   0.],
        [  2., 125.,   1.,   0.],
        [ 21.,  98.,   5.,   4.],
        [  0., 120.,   8.,   0.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0156, 0.9766, 0.0391, 0.0000])             
Predicted per class: tensor([ 25., 469.,  14.,   4.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:10501) in                         1.5 s.
(epoch: 135, batches: 50, time: 0.002, data: 0.003) loss_real: 0.017 loss_move: 0.002 loss_random: 0.001 loss_scanline: 0.000 loss: 0.020 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001652 -> 0.0001642
End of epoch 135 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 136, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.005 loss_random: 0.000 loss_scanline: 0.000 loss: 0.005 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 126.,   1.,   1.],
        [  3.,  97.,   7.,  21.],
        [  0., 116.,   9.,   3.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9844, 0.0547, 0.0234])             
Predicted per class: tensor([  3., 467.,  17.,  25.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:10601) in                         1.6 s.
learning rate 0.0001642 -> 0.0001632
End of epoch 136 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 137, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001632 -> 0.0001622
End of epoch 137 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 126.,   0.,   2.],
        [  9., 106.,   3.,  10.],
        [  8.,  69.,   9.,  42.],
        [  0., 108.,   6.,  14.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.8281, 0.0703, 0.1094])             
Predicted per class: tensor([ 17., 409.,  18.,  68.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:10701) in                         1.5 s.
(epoch: 138, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.001 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001622 -> 0.0001612
End of epoch 138 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 31.,  1., 96.],
        [ 0., 39.,  9., 80.],
        [19., 12., 42., 55.],
        [ 0., 28., 11., 89.]])
Overall accuracy: 0.33
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.3047, 0.3281, 0.6953])             
Predicted per class: tensor([ 19., 110.,  63., 320.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:10801) in                         1.5 s.
(epoch: 139, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001612 -> 0.0001602
End of epoch 139 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 140, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.029 loss_random: 0.000 loss_scanline: 0.000 loss: 0.029 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 121.,   6.,   1.],
        [ 10.,  85.,  32.,   1.],
        [  0., 109.,  19.,   0.]])
Overall accuracy: 0.30
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9453, 0.2500, 0.0000])             
Predicted per class: tensor([ 10., 443.,  57.,   2.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:10901) in                         1.5 s.
learning rate 0.0001602 -> 0.0001592
End of epoch 140 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 141, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001592 -> 0.0001582
End of epoch 141 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 128.,   0.,   0.],
        [ 22., 105.,   1.,   0.],
        [  0., 127.,   0.,   1.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 1.0000, 0.0078, 0.0078])             
Predicted per class: tensor([ 22., 488.,   1.,   1.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:11001) in                         1.6 s.
(epoch: 142, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001582 -> 0.0001572
End of epoch 142 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 50., 42., 36.],
        [ 4., 44., 58., 22.],
        [ 7., 13., 92., 16.],
        [ 0., 30., 70., 28.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.3438, 0.7188, 0.2188])             
Predicted per class: tensor([ 11., 137., 262., 102.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:11101) in                         1.5 s.
(epoch: 143, batches: 50, time: 0.002, data: 0.003) loss_real: 0.019 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.020 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001572 -> 0.0001562
End of epoch 143 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 127.,   1.,   0.],
        [  0., 121.,   4.,   3.],
        [  0., 112.,   4.,  12.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9922, 0.0312, 0.0938])             
Predicted per class: tensor([  0., 488.,   9.,  15.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:11201) in                         1.5 s.
(epoch: 144, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.001 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001562 -> 0.0001552
End of epoch 144 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 145, batches: 50, time: 0.002, data: 0.002) loss_real: 0.002 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.001 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 126.,   2.,   0.],
        [  0.,  87.,  40.,   1.],
        [  0., 117.,  11.,   0.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9844, 0.3125, 0.0000])             
Predicted per class: tensor([  0., 458.,  53.,   1.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:11301) in                         1.6 s.
learning rate 0.0001552 -> 0.0001542
End of epoch 145 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 146, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.041 loss_random: 0.000 loss_scanline: 0.001 loss: 0.044 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001542 -> 0.0001532
End of epoch 146 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 122.,   3.,   3.],
        [  0., 103.,  15.,  10.],
        [  0., 113.,  15.,   0.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9531, 0.1172, 0.0000])             
Predicted per class: tensor([  0., 466.,  33.,  13.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:11401) in                         1.5 s.
(epoch: 147, batches: 50, time: 0.002, data: 0.003) loss_real: 0.005 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.005 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(0.7500)
tensor([[64.,  0.,  0.,  0.],
        [64.,  0.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001532 -> 0.0001522
End of epoch 147 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 118.,  10.],
        [  0.,   0., 120.,   8.],
        [  0.,   0., 110.,  18.],
        [  0.,   0., 109.,  19.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.8594, 0.1484])             
Predicted per class: tensor([  0.,   0., 457.,  55.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:11501) in                         1.5 s.
(epoch: 148, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.482 loss_random: 0.000 loss_scanline: 0.000 loss: 0.484 acc_real: 1.000 acc_move: 0.828 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001522 -> 0.0001512
End of epoch 148 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 149, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.000 loss_random: 0.001 loss_scanline: 0.000 loss: 0.004 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,  11.,   0., 117.],
        [  0.,   9.,  10., 109.],
        [  0.,   6.,   6., 116.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0859, 0.0781, 0.9062])             
Predicted per class: tensor([  0.,  26.,  16., 470.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:11601) in                         1.6 s.
learning rate 0.0001512 -> 0.0001502
End of epoch 149 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 150, batches: 50, time: 0.003, data: 0.005) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001502 -> 0.0001493
End of epoch 150 / 300 	 Time Taken: 9 sec
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 120.,   8.,   0.],
        [  1.,  70.,  51.,   6.],
        [  0., 109.,  17.,   2.]])
Overall accuracy: 0.34
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9375, 0.3984, 0.0156])             
Predicted per class: tensor([  1., 427.,  76.,   8.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:11701) in                         1.7 s.
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 151, batches: 50, time: 0.004, data: 0.000) loss_real: 0.001 loss_move: 0.000 loss_random: 0.003 loss_scanline: 0.000 loss: 0.004 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001493 -> 0.0001483
End of epoch 151 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   9.,   1., 118.],
        [  0.,  16.,  22.,  90.],
        [  0.,   0.,  12., 116.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0703, 0.1719, 0.9062])             
Predicted per class: tensor([  0.,  25.,  35., 452.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:11801) in                         1.5 s.
(epoch: 152, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.001 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001483 -> 0.0001473
End of epoch 152 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,   9., 119.],
        [  0.,   0.,  54.,  74.],
        [  0.,   1.,  13., 114.]])
Overall accuracy: 0.33
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.4219, 0.8906])             
Predicted per class: tensor([  0.,   1.,  76., 435.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:11901) in                         1.5 s.
(epoch: 153, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.002 loss_random: 0.000 loss_scanline: 0.000 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001473 -> 0.0001463
End of epoch 153 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 154, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 41.,  0., 87.],
        [ 0., 23.,  6., 99.],
        [ 0., 32., 55., 41.],
        [ 0., 28., 27., 73.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.1797, 0.4297, 0.5703])             
Predicted per class: tensor([  0., 124.,  88., 300.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:12001) in                         1.7 s.
learning rate 0.0001463 -> 0.0001453
End of epoch 154 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 155, batches: 50, time: 0.002, data: 0.002) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001453 -> 0.0001443
End of epoch 155 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   1.,   8., 119.],
        [  0.,   0.,  48.,  80.],
        [  0.,   0.,  19., 109.]])
Overall accuracy: 0.31
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0078, 0.3750, 0.8516])             
Predicted per class: tensor([  0.,   1.,  75., 436.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:12101) in                         1.5 s.
(epoch: 156, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001443 -> 0.0001433
End of epoch 156 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[59.,  1., 67.,  1.],
        [53.,  1., 74.,  0.],
        [38.,  2., 77., 11.],
        [52.,  1., 58., 17.]])
Overall accuracy: 0.30
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.4609, 0.0078, 0.6016, 0.1328])             
Predicted per class: tensor([202.,   5., 276.,  29.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:12201) in                         1.5 s.
(epoch: 157, batches: 50, time: 0.002, data: 0.006) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.001 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001433 -> 0.0001423
End of epoch 157 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 158, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   6.,   0., 122.],
        [  0.,   4.,   1., 123.],
        [ 10.,  14.,  30.,  74.],
        [  1.,  11.,   5., 111.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0312, 0.2344, 0.8672])             
Predicted per class: tensor([ 11.,  35.,  36., 430.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:12301) in                         1.6 s.
learning rate 0.0001423 -> 0.0001413
End of epoch 158 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 159, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.002 loss_random: 0.000 loss_scanline: 0.000 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,   0., 128.],
        [  0.,   1.,  10., 117.],
        [  0.,   0.,   1., 127.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.0781, 0.9922])             
Predicted per class: tensor([  0.,   1.,  11., 500.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:12401) in                         1.5 s.
learning rate 0.0001413 -> 0.0001403
End of epoch 159 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 160, batches: 50, time: 0.002, data: 0.003) loss_real: 0.007 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.008 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001403 -> 0.0001393
End of epoch 160 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,  10., 118.],
        [  0.,   1.,  57.,  70.],
        [  0.,   0.,  10., 118.]])
Overall accuracy: 0.34
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.4453, 0.9219])             
Predicted per class: tensor([  0.,   1.,  77., 434.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:12501) in                         1.6 s.
(epoch: 161, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001393 -> 0.0001383
End of epoch 161 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,  36.,  92.,   0.],
        [  0.,  27., 101.,   0.],
        [  0.,  32.,  95.,   1.],
        [  0.,  40.,  87.,   1.]])
Overall accuracy: 0.24
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.2109, 0.7422, 0.0078])             
Predicted per class: tensor([  0., 135., 375.,   2.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:12601) in                         1.5 s.
(epoch: 162, batches: 50, time: 0.002, data: 0.003) loss_real: 0.003 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001383 -> 0.0001373
End of epoch 162 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 163, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.000 loss_random: 0.001 loss_scanline: 0.001 loss: 0.004 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  9.,   0.,   0., 119.],
        [ 17.,   0.,   0., 111.],
        [ 48.,   2.,   1.,  77.],
        [ 22.,   1.,   0., 105.]])
Overall accuracy: 0.22
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0703, 0.0000, 0.0078, 0.8203])             
Predicted per class: tensor([ 96.,   3.,   1., 412.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:12701) in                         1.5 s.
learning rate 0.0001373 -> 0.0001363
End of epoch 163 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 164, batches: 50, time: 0.002, data: 0.002) loss_real: 0.006 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.007 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001363 -> 0.0001353
End of epoch 164 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[127.,   0.,   0.,   1.],
        [120.,   6.,   0.,   2.],
        [ 92.,  23.,   4.,   9.],
        [125.,   2.,   0.,   1.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.9922, 0.0469, 0.0312, 0.0078])             
Predicted per class: tensor([464.,  31.,   4.,  13.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:12801) in                         1.7 s.
(epoch: 165, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001353 -> 0.0001343
End of epoch 165 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  1., 126.,   0.,   1.],
        [  2., 122.,   0.,   4.],
        [ 18.,  84.,  14.,  12.],
        [  3., 113.,   3.,   9.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0078, 0.9531, 0.1094, 0.0703])             
Predicted per class: tensor([ 24., 445.,  17.,  26.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:12901) in                         1.6 s.
(epoch: 166, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001343 -> 0.0001333
End of epoch 166 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 167, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[128.,   0.,   0.,   0.],
        [118.,   0.,  10.,   0.],
        [ 79.,   1.,  45.,   3.],
        [115.,   2.,  10.,   1.]])
Overall accuracy: 0.34
statistics per class: real, move, random, scanline:             
Accuracy: tensor([1.0000, 0.0000, 0.3516, 0.0078])             
Predicted per class: tensor([440.,   3.,  65.,   4.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:13001) in                         1.6 s.
learning rate 0.0001333 -> 0.0001323
End of epoch 167 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 168, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  1., 126.,   1.,   0.],
        [  1., 124.,   2.,   1.],
        [  0., 128.,   0.,   0.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9844, 0.0156, 0.0000])             
Predicted per class: tensor([  2., 506.,   3.,   1.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:13101) in                         1.5 s.
learning rate 0.0001323 -> 0.0001313
End of epoch 168 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 169, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001313 -> 0.0001303
End of epoch 169 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   2.,   5., 121.],
        [  4.,   8.,  37.,  79.],
        [  0.,   1.,  11., 116.]])
Overall accuracy: 0.30
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0156, 0.2891, 0.9062])             
Predicted per class: tensor([  4.,  11.,  53., 444.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:13201) in                         1.5 s.
(epoch: 170, batches: 50, time: 0.002, data: 0.006) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001303 -> 0.0001294
End of epoch 170 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   4.,   3., 121.],
        [  5.,  15.,  21.,  87.],
        [  0.,   3.,   2., 123.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0312, 0.1641, 0.9609])             
Predicted per class: tensor([  5.,  22.,  26., 459.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:13301) in                         1.7 s.
(epoch: 171, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001294 -> 0.0001284
End of epoch 171 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 172, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,  13., 115.],
        [  0.,   6.,  47.,  75.],
        [  0.,   5.,   5., 118.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.3672, 0.9219])             
Predicted per class: tensor([  0.,  11.,  65., 436.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:13401) in                         1.6 s.
learning rate 0.0001284 -> 0.0001274
End of epoch 172 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 173, batches: 50, time: 0.002, data: 0.005) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001274 -> 0.0001264
End of epoch 173 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,   4., 124.],
        [  3.,   5.,  37.,  83.],
        [  0.,   1.,   5., 122.]])
Overall accuracy: 0.31
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.2891, 0.9531])             
Predicted per class: tensor([  3.,   6.,  46., 457.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:13501) in                         1.6 s.
(epoch: 174, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.001 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001264 -> 0.0001254
End of epoch 174 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   1.,   4., 123.],
        [  2.,  14.,  23.,  89.],
        [  0.,   5.,   3., 120.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0078, 0.1797, 0.9375])             
Predicted per class: tensor([  2.,  20.,  30., 460.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:13601) in                         1.8 s.
(epoch: 175, batches: 50, time: 0.003, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001254 -> 0.0001244
End of epoch 175 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 176, batches: 50, time: 0.005, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
Confusion matrix:
tensor([[  3.,   0.,   4., 121.],
        [  1.,   1.,  17., 109.],
        [  0.,   1.,  62.,  65.],
        [  1.,   4.,  19., 104.]])
Overall accuracy: 0.33
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0234, 0.0078, 0.4844, 0.8125])             
Predicted per class: tensor([  5.,   6., 102., 399.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:13701) in                         1.5 s.
learning rate 0.0001244 -> 0.0001234
End of epoch 176 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 177, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,  16., 112.],
        [  0.,   0.,  32.,  96.],
        [  9.,   1.,  60.,  58.],
        [  0.,   1.,  27., 100.]])
Overall accuracy: 0.31
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.4688, 0.7812])             
Predicted per class: tensor([  9.,   2., 135., 366.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:13801) in                         1.8 s.
learning rate 0.0001234 -> 0.0001224
End of epoch 177 / 300 	 Time Taken: 11 sec
accuracy: tensor(0.7500)
tensor([[64.,  0.,  0.,  0.],
        [64.,  0.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 178, batches: 50, time: 0.002, data: 0.003) loss_real: 0.039 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.040 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001224 -> 0.0001214
End of epoch 178 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 93.,  0., 35.],
        [ 0., 91.,  0., 37.],
        [ 0., 77., 26., 25.],
        [ 0., 77.,  0., 51.]])
Overall accuracy: 0.33
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.7109, 0.2031, 0.3984])             
Predicted per class: tensor([  0., 338.,  26., 148.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:13901) in                         1.5 s.
(epoch: 179, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001214 -> 0.0001204
End of epoch 179 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  2.,  10.,   4., 112.],
        [  1.,  10.,  17., 100.],
        [  2.,   5.,  57.,  64.],
        [  2.,  17.,  13.,  96.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0156, 0.0781, 0.4453, 0.7500])             
Predicted per class: tensor([  7.,  42.,  91., 372.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:14001) in                         1.4 s.
(epoch: 180, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001204 -> 0.0001194
End of epoch 180 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 181, batches: 50, time: 0.002, data: 0.006) loss_real: 0.001 loss_move: 0.004 loss_random: 0.000 loss_scanline: 0.000 loss: 0.004 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,  19., 109.],
        [  0.,   1.,  19., 108.],
        [  0.,  11.,  56.,  61.],
        [  0.,  10.,  13., 105.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0078, 0.4375, 0.8203])             
Predicted per class: tensor([  0.,  22., 107., 383.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:14101) in                         1.4 s.
learning rate 0.0001194 -> 0.0001184
End of epoch 181 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 182, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001184 -> 0.0001174
End of epoch 182 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   2., 126.],
        [  0.,   2.,   6., 120.],
        [  0.,   5.,  53.,  70.],
        [  0.,   6.,   2., 120.]])
Overall accuracy: 0.34
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0156, 0.4141, 0.9375])             
Predicted per class: tensor([  0.,  13.,  63., 436.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:14201) in                         1.5 s.
(epoch: 183, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001174 -> 0.0001164
End of epoch 183 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 119.,   6.,   3.],
        [  0., 111.,  14.,   3.],
        [  0.,  68.,  57.,   3.],
        [  0., 104.,  10.,  14.]])
Overall accuracy: 0.36
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.8672, 0.4453, 0.1094])             
Predicted per class: tensor([  0., 402.,  87.,  23.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:14301) in                         1.5 s.
(epoch: 184, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001164 -> 0.0001154
End of epoch 184 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   6., 114.,   8.],
        [  0.,   3., 120.,   5.],
        [  0.,   8., 115.,   5.],
        [  0.,   9.,  97.,  22.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0234, 0.8984, 0.1719])             
Predicted per class: tensor([  0.,  26., 446.,  40.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:14401) in                         1.5 s.
(epoch: 185, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001154 -> 0.0001144
End of epoch 185 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 186, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 115.,  13.],
        [  0.,   0., 120.,   8.],
        [  1.,   1., 111.,  15.],
        [  0.,   1.,  99.,  28.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.8672, 0.2188])             
Predicted per class: tensor([  1.,   2., 445.,  64.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:14501) in                         1.6 s.
learning rate 0.0001144 -> 0.0001134
End of epoch 186 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 187, batches: 50, time: 0.002, data: 0.005) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001134 -> 0.0001124
End of epoch 187 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  9.,   0.,   5., 114.],
        [ 10.,   0.,  26.,  92.],
        [  7.,   3.,  65.,  53.],
        [ 12.,   7.,  14.,  95.]])
Overall accuracy: 0.33
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0703, 0.0000, 0.5078, 0.7422])             
Predicted per class: tensor([ 38.,  10., 110., 354.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:14601) in                         1.6 s.
(epoch: 188, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001124 -> 0.0001114
End of epoch 188 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 28.,   0.,   0., 100.],
        [ 14.,   1.,  11., 102.],
        [ 19.,   1.,  49.,  59.],
        [ 18.,   1.,   2., 107.]])
Overall accuracy: 0.36
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.2188, 0.0078, 0.3828, 0.8359])             
Predicted per class: tensor([ 79.,   3.,  62., 368.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:14701) in                         1.4 s.
(epoch: 189, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001114 -> 0.0001104
End of epoch 189 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 190, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  2.,   3.,   0., 123.],
        [  2.,   2.,  14., 110.],
        [  9.,   2.,  47.,  70.],
        [  4.,   5.,  11., 108.]])
Overall accuracy: 0.31
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0156, 0.0156, 0.3672, 0.8438])             
Predicted per class: tensor([ 17.,  12.,  72., 411.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:14801) in                         1.5 s.
learning rate 0.0001104 -> 0.0001095
End of epoch 190 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 191, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001095 -> 0.0001085
End of epoch 191 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,  11., 117.],
        [  3.,   2.,  48.,  75.],
        [  0.,   1.,  10., 117.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.3750, 0.9141])             
Predicted per class: tensor([  3.,   3.,  69., 437.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:14901) in                         1.5 s.
(epoch: 192, batches: 50, time: 0.002, data: 0.004) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001085 -> 0.0001075
End of epoch 192 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 128.,   0.],
        [  0.,   0., 128.,   0.],
        [  1.,   0., 127.,   0.],
        [  0.,   1., 127.,   0.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.9922, 0.0000])             
Predicted per class: tensor([  1.,   1., 510.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:15001) in                         1.4 s.
(epoch: 193, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001075 -> 0.0001065
End of epoch 193 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 126.,   2.],
        [  0.,   0., 128.,   0.],
        [  0.,   0., 127.,   1.],
        [  0.,   3., 124.,   1.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.9922, 0.0078])             
Predicted per class: tensor([  0.,   3., 505.,   4.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:15101) in                         1.4 s.
(epoch: 194, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001065 -> 0.0001055
End of epoch 194 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 195, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0.,  0., 34., 94.],
        [ 0.,  0., 51., 77.],
        [ 0.,  0., 75., 53.],
        [ 0.,  1., 46., 81.]])
Overall accuracy: 0.30
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.5859, 0.6328])             
Predicted per class: tensor([  0.,   1., 206., 305.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:15201) in                         1.6 s.
learning rate 0.0001055 -> 0.0001045
End of epoch 195 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 196, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.239 loss_random: 0.000 loss_scanline: 0.000 loss: 0.239 acc_real: 1.000 acc_move: 0.969 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001045 -> 0.0001035
End of epoch 196 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 89.,  0., 39.],
        [ 0., 89., 10., 29.],
        [ 4., 56., 34., 34.],
        [ 0., 85.,  1., 42.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.6953, 0.2656, 0.3281])             
Predicted per class: tensor([  4., 319.,  45., 144.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:15301) in                         1.5 s.
(epoch: 197, batches: 50, time: 0.002, data: 0.005) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0001035 -> 0.0001025
End of epoch 197 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 126.,   1.,   1.],
        [  0., 114.,  12.,   2.],
        [  8.,  76.,  41.,   3.],
        [  0., 112.,   7.,   9.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.8906, 0.3203, 0.0703])             
Predicted per class: tensor([  8., 428.,  61.,  15.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:15401) in                         1.5 s.
(epoch: 198, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0001025 -> 0.0001015
End of epoch 198 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 199, batches: 50, time: 0.002, data: 0.015) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  3.,   2., 108.,  15.],
        [  0.,   4., 116.,   8.],
        [ 11.,  10.,  97.,  10.],
        [  5.,  13., 100.,  10.]])
Overall accuracy: 0.22
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0234, 0.0312, 0.7578, 0.0781])             
Predicted per class: tensor([ 19.,  29., 421.,  43.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:15501) in                         1.4 s.
learning rate 0.0001015 -> 0.0001005
End of epoch 199 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 200, batches: 50, time: 0.003, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
saving the model at the end of epoch 200, iters 998400
learning rate 0.0001005 -> 0.0000995
End of epoch 200 / 300 	 Time Taken: 10 sec
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 127.,   1.,   0.],
        [  0., 101.,  27.,   0.],
        [  0., 128.,   0.,   0.]])
Overall accuracy: 0.30
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9922, 0.2109, 0.0000])             
Predicted per class: tensor([  0., 484.,  28.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:15601) in                         1.8 s.
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 201, batches: 50, time: 0.004, data: 0.003) loss_real: 0.003 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000995 -> 0.0000985
End of epoch 201 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 124.,   4.,   0.],
        [  0.,  89.,  39.,   0.],
        [  0., 125.,   3.,   0.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9688, 0.3047, 0.0000])             
Predicted per class: tensor([  0., 466.,  46.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:15701) in                         1.5 s.
(epoch: 202, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000985 -> 0.0000975
End of epoch 202 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 121.,   7.,   0.],
        [  0.,  80.,  48.,   0.],
        [  0., 123.,   5.,   0.]])
Overall accuracy: 0.33
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9453, 0.3750, 0.0000])             
Predicted per class: tensor([  0., 452.,  60.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:15801) in                         1.6 s.
(epoch: 203, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000975 -> 0.0000965
End of epoch 203 / 300 	 Time Taken: 11 sec
accuracy: tensor(0.9805)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  5.,  0., 59.]])
(epoch: 204, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,  11.,   1., 116.],
        [  2.,  13.,  38.,  75.],
        [  0.,   7.,   8., 113.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0859, 0.2969, 0.8828])             
Predicted per class: tensor([  2.,  31.,  47., 432.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:15901) in                         1.5 s.
learning rate 0.0000965 -> 0.0000955
End of epoch 204 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 205, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000955 -> 0.0000945
End of epoch 205 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,  14., 114.],
        [  0.,   0.,  58.,  70.],
        [  0.,   2.,  14., 112.]])
Overall accuracy: 0.33
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.4531, 0.8750])             
Predicted per class: tensor([  0.,   2.,  86., 424.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:16001) in                         1.6 s.
(epoch: 206, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000945 -> 0.0000935
End of epoch 206 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,  14., 114.],
        [  0.,   2.,  60.,  66.],
        [  0.,   3.,  10., 115.]])
Overall accuracy: 0.34
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.4688, 0.8984])             
Predicted per class: tensor([  0.,   5.,  84., 423.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:16101) in                         1.5 s.
(epoch: 207, batches: 50, time: 0.003, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000935 -> 0.0000925
End of epoch 207 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 208, batches: 50, time: 0.003, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   1.,  10., 117.],
        [  0.,   0.,  25., 103.],
        [  0.,   2.,  60.,  66.],
        [  0.,   3.,  18., 107.]])
Overall accuracy: 0.33
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.4688, 0.8359])             
Predicted per class: tensor([  0.,   6., 113., 393.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:16201) in                         1.7 s.
learning rate 0.0000925 -> 0.0000915
End of epoch 208 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 209, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 62., 19., 47.],
        [ 0., 59., 28., 41.],
        [ 0., 48., 58., 22.],
        [ 0., 64., 31., 33.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.4609, 0.4531, 0.2578])             
Predicted per class: tensor([  0., 233., 136., 143.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:16301) in                         1.5 s.
learning rate 0.0000915 -> 0.0000905
End of epoch 209 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 210, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000905 -> 0.0000896
End of epoch 210 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,  24., 104.],
        [  0.,   0.,  37.,  91.],
        [  0.,   0.,  77.,  51.],
        [  0.,   1.,  41.,  86.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.6016, 0.6719])             
Predicted per class: tensor([  0.,   1., 179., 332.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:16401) in                         1.6 s.
(epoch: 211, batches: 50, time: 0.002, data: 0.005) loss_real: 0.028 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.028 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000896 -> 0.0000886
End of epoch 211 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,  14.,   0., 114.],
        [  0.,  23.,   5., 100.],
        [  0.,  24.,  35.,  69.],
        [  0.,  21.,   3., 104.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.1797, 0.2734, 0.8125])             
Predicted per class: tensor([  0.,  82.,  43., 387.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:16501) in                         1.4 s.
(epoch: 212, batches: 50, time: 0.002, data: 0.003) loss_real: 0.005 loss_move: 0.019 loss_random: 0.000 loss_scanline: 0.000 loss: 0.024 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000886 -> 0.0000876
End of epoch 212 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 213, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[52.,  0.,  2., 74.],
        [54.,  0.,  7., 67.],
        [41.,  0., 45., 42.],
        [63.,  0., 11., 54.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.4062, 0.0000, 0.3516, 0.4219])             
Predicted per class: tensor([210.,   0.,  65., 237.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:16601) in                         1.5 s.
learning rate 0.0000876 -> 0.0000866
End of epoch 213 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 214, batches: 50, time: 0.002, data: 0.003) loss_real: 0.005 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.006 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000866 -> 0.0000856
End of epoch 214 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 74.,  0., 54.],
        [ 0., 83.,  6., 39.],
        [ 0., 43., 58., 27.],
        [ 0., 64., 10., 54.]])
Overall accuracy: 0.38
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.6484, 0.4531, 0.4219])             
Predicted per class: tensor([  0., 264.,  74., 174.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:16701) in                         1.4 s.
(epoch: 215, batches: 50, time: 0.002, data: 0.002) loss_real: 0.002 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000856 -> 0.0000846
End of epoch 215 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 123.,   5.,   0.],
        [  0., 102.,  26.,   0.],
        [  0., 124.,   4.,   0.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9609, 0.2031, 0.0000])             
Predicted per class: tensor([  0., 477.,  35.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:16801) in                         1.6 s.
(epoch: 216, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.001 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000846 -> 0.0000836
End of epoch 216 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 217, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 125.,   3.,   0.],
        [  0.,  94.,  33.,   1.],
        [  0., 125.,   3.,   0.]])
Overall accuracy: 0.31
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9766, 0.2578, 0.0000])             
Predicted per class: tensor([  0., 472.,  39.,   1.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:16901) in                         1.4 s.
learning rate 0.0000836 -> 0.0000826
End of epoch 217 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 218, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 124.,   3.,   1.],
        [  0., 122.,   6.,   0.],
        [  3.,  66.,  56.,   3.],
        [  0., 117.,   8.,   3.]])
Overall accuracy: 0.35
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9531, 0.4375, 0.0234])             
Predicted per class: tensor([  3., 429.,  73.,   7.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:17001) in                         1.4 s.
learning rate 0.0000826 -> 0.0000816
End of epoch 218 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 219, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000816 -> 0.0000806
End of epoch 219 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 126.,   1.,   1.],
        [  0., 112.,  12.,   4.],
        [  0.,  75.,  46.,   7.],
        [  0., 102.,  21.,   5.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.8750, 0.3594, 0.0391])             
Predicted per class: tensor([  0., 415.,  80.,  17.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:17101) in                         1.6 s.
(epoch: 220, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000806 -> 0.0000796
End of epoch 220 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   4., 124.],
        [  0.,   1.,  16., 111.],
        [  0.,   5.,  55.,  68.],
        [  0.,   7.,  19., 102.]])
Overall accuracy: 0.31
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0078, 0.4297, 0.7969])             
Predicted per class: tensor([  0.,  13.,  94., 405.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:17201) in                         1.5 s.
(epoch: 221, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000796 -> 0.0000786
End of epoch 221 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 222, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 126.,   2.,   0.],
        [  0., 121.,   7.,   0.],
        [  0.,  75.,  53.,   0.],
        [  0., 113.,  15.,   0.]])
Overall accuracy: 0.34
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9453, 0.4141, 0.0000])             
Predicted per class: tensor([  0., 435.,  77.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:17301) in                         1.5 s.
learning rate 0.0000786 -> 0.0000776
End of epoch 222 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 223, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000776 -> 0.0000766
End of epoch 223 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 116.,  12.],
        [  0.,   0., 119.,   9.],
        [  0.,   1., 123.,   4.],
        [  0.,   1., 106.,  21.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.9609, 0.1641])             
Predicted per class: tensor([  0.,   2., 464.,  46.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:17401) in                         1.4 s.
(epoch: 224, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000766 -> 0.0000756
End of epoch 224 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0.,  5., 48., 75.],
        [ 0.,  1., 56., 71.],
        [ 0.,  1., 93., 34.],
        [ 0.,  1., 57., 70.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0078, 0.7266, 0.5469])             
Predicted per class: tensor([  0.,   8., 254., 250.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:17501) in                         1.4 s.
(epoch: 225, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000756 -> 0.0000746
End of epoch 225 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 226, batches: 50, time: 0.007, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
Confusion matrix:
tensor([[  0., 103.,   1.,  24.],
        [  0.,  87.,  21.,  20.],
        [  1.,  60.,  52.,  15.],
        [  0.,  69.,  27.,  32.]])
Overall accuracy: 0.33
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.6797, 0.4062, 0.2500])             
Predicted per class: tensor([  1., 319., 101.,  91.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:17601) in                         1.7 s.
learning rate 0.0000746 -> 0.0000736
End of epoch 226 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 227, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0.,  0., 29., 99.],
        [ 0.,  6., 33., 89.],
        [ 1.,  8., 68., 51.],
        [ 0.,  0., 47., 81.]])
Overall accuracy: 0.30
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0469, 0.5312, 0.6328])             
Predicted per class: tensor([  1.,  14., 177., 320.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:17701) in                         1.7 s.
learning rate 0.0000736 -> 0.0000726
End of epoch 227 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 228, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000726 -> 0.0000716
End of epoch 228 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   6.,  10., 112.],
        [  1.,   8.,  61.,  58.],
        [  0.,   2.,  19., 107.]])
Overall accuracy: 0.34
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0469, 0.4766, 0.8359])             
Predicted per class: tensor([  1.,  16.,  90., 405.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:17801) in                         1.6 s.
(epoch: 229, batches: 50, time: 0.002, data: 0.006) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000716 -> 0.0000706
End of epoch 229 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   5.,   9., 114.],
        [  0.,   7.,  52.,  69.],
        [  0.,   1.,  13., 114.]])
Overall accuracy: 0.33
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0391, 0.4062, 0.8906])             
Predicted per class: tensor([  0.,  13.,  74., 425.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:17901) in                         1.5 s.
(epoch: 230, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000706 -> 0.0000697
End of epoch 230 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 231, batches: 50, time: 0.002, data: 0.006) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,   8., 120.],
        [  0.,   2.,  56.,  70.],
        [  0.,   4.,  19., 105.]])
Overall accuracy: 0.31
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.4375, 0.8203])             
Predicted per class: tensor([  0.,   6.,  83., 423.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:18001) in                         1.5 s.
learning rate 0.0000697 -> 0.0000687
End of epoch 231 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 232, batches: 50, time: 0.002, data: 0.002) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000687 -> 0.0000677
End of epoch 232 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   1.,  10., 117.],
        [  2.,   2.,  50.,  74.],
        [  0.,   2.,  18., 108.]])
Overall accuracy: 0.31
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0078, 0.3906, 0.8438])             
Predicted per class: tensor([  2.,   5.,  78., 427.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:18101) in                         1.4 s.
(epoch: 233, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000677 -> 0.0000667
End of epoch 233 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   4.,   7., 117.],
        [  1.,   8.,  56.,  63.],
        [  0.,   3.,  16., 109.]])
Overall accuracy: 0.33
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0312, 0.4375, 0.8516])             
Predicted per class: tensor([  1.,  15.,  79., 417.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:18201) in                         1.5 s.
(epoch: 234, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000667 -> 0.0000657
End of epoch 234 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   2.,  12., 114.],
        [  1.,   3.,  55.,  69.],
        [  0.,   3.,  20., 105.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0156, 0.4297, 0.8203])             
Predicted per class: tensor([  1.,   8.,  87., 416.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:18301) in                         1.6 s.
(epoch: 235, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000657 -> 0.0000647
End of epoch 235 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 236, batches: 50, time: 0.002, data: 0.023) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,  16., 112.],
        [  0.,   0.,  52.,  76.],
        [  0.,   0.,  13., 115.]])
Overall accuracy: 0.33
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.4062, 0.8984])             
Predicted per class: tensor([  0.,   0.,  81., 431.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:18401) in                         1.5 s.
learning rate 0.0000647 -> 0.0000637
End of epoch 236 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 237, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000637 -> 0.0000627
End of epoch 237 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   2., 126.],
        [  0.,   0.,  16., 112.],
        [  0.,   0.,  60.,  68.],
        [  0.,   3.,  19., 106.]])
Overall accuracy: 0.32
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.4688, 0.8281])             
Predicted per class: tensor([  0.,   3.,  97., 412.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:18501) in                         1.5 s.
(epoch: 238, batches: 50, time: 0.002, data: 0.000) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000627 -> 0.0000617
End of epoch 238 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,  13.,   0., 115.],
        [  0.,  38.,  15.,  75.],
        [  0.,  11.,   9., 108.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.1016, 0.1172, 0.8438])             
Predicted per class: tensor([  0.,  62.,  24., 426.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:18601) in                         1.5 s.
(epoch: 239, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000617 -> 0.0000607
End of epoch 239 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 240, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,  26.,   0., 102.],
        [  0.,  42.,   1.,  85.],
        [  0.,  55.,  21.,  52.],
        [  0.,  32.,  15.,  81.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.3281, 0.1641, 0.6328])             
Predicted per class: tensor([  0., 155.,  37., 320.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:18701) in                         1.6 s.
learning rate 0.0000607 -> 0.0000597
End of epoch 240 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 241, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000597 -> 0.0000587
End of epoch 241 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   7.,   0., 121.],
        [  0.,  34.,  17.,  77.],
        [  0.,  11.,  10., 107.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0547, 0.1328, 0.8359])             
Predicted per class: tensor([  0.,  52.,  27., 433.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:18801) in                         1.5 s.
(epoch: 242, batches: 50, time: 0.002, data: 0.006) loss_real: 0.000 loss_move: 0.001 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000587 -> 0.0000577
End of epoch 242 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   1.,   0., 127.],
        [  0.,   2.,  11., 115.],
        [  0.,   7.,  62.,  59.],
        [  0.,   3.,  16., 109.]])
Overall accuracy: 0.34
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0156, 0.4844, 0.8516])             
Predicted per class: tensor([  0.,  13.,  89., 410.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:18901) in                         1.5 s.
(epoch: 243, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.001 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000577 -> 0.0000567
End of epoch 243 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 125.,   3.,   0.],
        [  0., 114.,  14.,   0.],
        [  0.,  75.,  53.,   0.],
        [  0., 102.,  26.,   0.]])
Overall accuracy: 0.33
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.8906, 0.4141, 0.0000])             
Predicted per class: tensor([  0., 416.,  96.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:19001) in                         1.6 s.
(epoch: 244, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000567 -> 0.0000557
End of epoch 244 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 245, batches: 50, time: 0.002, data: 0.002) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 128.,   0.],
        [  0.,  11., 117.,   0.],
        [  0.,  35.,  93.,   0.],
        [  0.,   3., 125.,   0.]])
Overall accuracy: 0.20
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0859, 0.7266, 0.0000])             
Predicted per class: tensor([  0.,  49., 463.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:19101) in                         1.4 s.
learning rate 0.0000557 -> 0.0000547
End of epoch 245 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 246, batches: 50, time: 0.002, data: 0.002) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000547 -> 0.0000537
End of epoch 246 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   2., 126.,   0.],
        [  0.,   1., 119.,   8.],
        [  0.,   9., 107.,  12.],
        [  0.,   0., 128.,   0.]])
Overall accuracy: 0.21
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0078, 0.8359, 0.0000])             
Predicted per class: tensor([  0.,  12., 480.,  20.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:19201) in                         1.6 s.
(epoch: 247, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000537 -> 0.0000527
End of epoch 247 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 128.,   0.],
        [  0.,   0., 125.,   3.],
        [  0.,   3., 115.,  10.],
        [  0.,   0., 128.,   0.]])
Overall accuracy: 0.22
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.8984, 0.0000])             
Predicted per class: tensor([  0.,   3., 496.,  13.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:19301) in                         1.5 s.
(epoch: 248, batches: 50, time: 0.002, data: 0.002) loss_real: 0.003 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.003 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000527 -> 0.0000517
End of epoch 248 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 249, batches: 50, time: 0.002, data: 0.002) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.001 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   1., 127.,   0.],
        [  0.,   0., 125.,   3.],
        [  0.,  17., 102.,   9.],
        [  0.,   0., 128.,   0.]])
Overall accuracy: 0.20
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.7969, 0.0000])             
Predicted per class: tensor([  0.,  18., 482.,  12.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:19401) in                         1.4 s.
learning rate 0.0000517 -> 0.0000507
End of epoch 249 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 250, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000507 -> 0.0000498
End of epoch 250 / 300 	 Time Taken: 9 sec
Confusion matrix:
tensor([[  0.,   0., 126.,   2.],
        [  0.,   1., 118.,   9.],
        [  0.,  14.,  99.,  15.],
        [  0.,   3., 124.,   1.]])
Overall accuracy: 0.20
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0078, 0.7734, 0.0078])             
Predicted per class: tensor([  0.,  18., 467.,  27.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:19501) in                         1.6 s.
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 251, batches: 50, time: 0.005, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000498 -> 0.0000488
End of epoch 251 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,  13., 115.,   0.],
        [  0.,  14., 106.,   8.],
        [  0.,  26.,  87.,  15.],
        [  0.,  20., 108.,   0.]])
Overall accuracy: 0.20
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.1094, 0.6797, 0.0000])             
Predicted per class: tensor([  0.,  73., 416.,  23.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:19601) in                         1.4 s.
(epoch: 252, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000488 -> 0.0000478
End of epoch 252 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 128.,   0.],
        [  1.,   4., 123.,   0.],
        [  1.,  17., 110.,   0.],
        [  0.,   1., 127.,   0.]])
Overall accuracy: 0.22
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0312, 0.8594, 0.0000])             
Predicted per class: tensor([  2.,  22., 488.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:19701) in                         1.6 s.
(epoch: 253, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000478 -> 0.0000468
End of epoch 253 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 254, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 128.,   0.],
        [  0.,   6., 122.,   0.],
        [  3.,  22., 103.,   0.],
        [  0.,   1., 127.,   0.]])
Overall accuracy: 0.21
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0469, 0.8047, 0.0000])             
Predicted per class: tensor([  3.,  29., 480.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:19801) in                         1.7 s.
learning rate 0.0000468 -> 0.0000458
End of epoch 254 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 255, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000458 -> 0.0000448
End of epoch 255 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   2., 114.,  12.],
        [  0.,   0., 105.,  23.],
        [  0.,   2.,  91.,  35.],
        [  0.,   5., 115.,   8.]])
Overall accuracy: 0.19
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.7109, 0.0625])             
Predicted per class: tensor([  0.,   9., 425.,  78.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:19901) in                         1.5 s.
(epoch: 256, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000448 -> 0.0000438
End of epoch 256 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 120.,   8.],
        [  0.,   1., 121.,   6.],
        [  2.,  12., 105.,   9.],
        [  0.,   3., 121.,   4.]])
Overall accuracy: 0.21
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0078, 0.8203, 0.0312])             
Predicted per class: tensor([  2.,  16., 467.,  27.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:20001) in                         1.6 s.
(epoch: 257, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000438 -> 0.0000428
End of epoch 257 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 258, batches: 50, time: 0.002, data: 0.004) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.001 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   2., 126.],
        [  0.,   0.,   4., 124.],
        [  0.,   1.,  59.,  68.],
        [  0.,   1.,  27., 100.]])
Overall accuracy: 0.31
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.4609, 0.7812])             
Predicted per class: tensor([  0.,   2.,  92., 418.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:20101) in                         1.5 s.
learning rate 0.0000428 -> 0.0000418
End of epoch 258 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 259, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,   8., 120.],
        [  0.,   6.,  50.,  72.],
        [  0.,   1.,  21., 106.]])
Overall accuracy: 0.30
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.3906, 0.8281])             
Predicted per class: tensor([  0.,   7.,  79., 426.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:20201) in                         1.5 s.
learning rate 0.0000418 -> 0.0000408
End of epoch 259 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 260, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000408 -> 0.0000398
End of epoch 260 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,  21., 107.],
        [  5.,   0.,  16., 107.],
        [ 16.,   4.,  50.,  58.],
        [  0.,   0.,  29.,  99.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.3906, 0.7734])             
Predicted per class: tensor([ 21.,   4., 116., 371.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:20301) in                         1.5 s.
(epoch: 261, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000398 -> 0.0000388
End of epoch 261 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,  14., 114.],
        [  2.,   1.,  17., 108.],
        [  7.,  25.,  40.,  56.],
        [  0.,   0.,  35.,  93.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0078, 0.3125, 0.7266])             
Predicted per class: tensor([  9.,  26., 106., 371.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:20401) in                         1.5 s.
(epoch: 262, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000388 -> 0.0000378
End of epoch 262 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 263, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,   4., 124.],
        [  0.,  15.,  31.,  82.],
        [  0.,   0.,  18., 110.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.2422, 0.8594])             
Predicted per class: tensor([  0.,  15.,  53., 444.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:20501) in                         1.4 s.
learning rate 0.0000378 -> 0.0000368
End of epoch 263 / 300 	 Time Taken: 11 sec
accuracy: tensor(0.9883)
tensor([[64.,  0.,  0.,  0.],
        [ 3., 61.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 264, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000368 -> 0.0000358
End of epoch 264 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   0., 128.],
        [  0.,   0.,  11., 117.],
        [  0.,  18.,  30.,  80.],
        [  0.,   0.,  19., 109.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.2344, 0.8516])             
Predicted per class: tensor([  0.,  18.,  60., 434.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:20601) in                         1.6 s.
(epoch: 265, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000358 -> 0.0000348
End of epoch 265 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 30., 93.,  5.],
        [ 0., 56., 64.,  8.],
        [ 0., 57., 66.,  5.],
        [ 0., 32., 91.,  5.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.4375, 0.5156, 0.0391])             
Predicted per class: tensor([  0., 175., 314.,  23.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:20701) in                         1.4 s.
(epoch: 266, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000348 -> 0.0000338
End of epoch 266 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 267, batches: 50, time: 0.002, data: 0.000) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 125.,   3.],
        [  0.,   0., 123.,   5.],
        [  0.,   2., 116.,  10.],
        [  0.,   0., 121.,   7.]])
Overall accuracy: 0.24
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.9062, 0.0547])             
Predicted per class: tensor([  0.,   2., 485.,  25.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:20801) in                         1.4 s.
learning rate 0.0000338 -> 0.0000328
End of epoch 267 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 268, batches: 50, time: 0.002, data: 0.004) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 122.,   6.],
        [  0.,   0., 124.,   4.],
        [  1.,   1., 114.,  12.],
        [  0.,   0., 111.,  17.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.8906, 0.1328])             
Predicted per class: tensor([  1.,   1., 471.,  39.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:20901) in                         1.6 s.
learning rate 0.0000328 -> 0.0000318
End of epoch 268 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 269, batches: 50, time: 0.002, data: 0.003) loss_real: 0.002 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.002 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000318 -> 0.0000308
End of epoch 269 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,  96.,  32.],
        [  0.,   0., 101.,  27.],
        [  0.,   1., 100.,  27.],
        [  0.,   0.,  88.,  40.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.7812, 0.3125])             
Predicted per class: tensor([  0.,   1., 385., 126.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:21001) in                         1.4 s.
(epoch: 270, batches: 50, time: 0.002, data: 0.002) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000308 -> 0.0000299
End of epoch 270 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 114.,  14.],
        [  0.,   0., 115.,  13.],
        [  0.,   8., 102.,  18.],
        [  0.,   0., 106.,  22.]])
Overall accuracy: 0.24
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.7969, 0.1719])             
Predicted per class: tensor([  0.,   8., 437.,  67.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:21101) in                         1.7 s.
(epoch: 271, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000299 -> 0.0000289
End of epoch 271 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 272, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,   4., 124.],
        [  0.,   0.,  15., 113.],
        [  0.,  15.,  32.,  81.],
        [  0.,   0.,  24., 104.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.2500, 0.8125])             
Predicted per class: tensor([  0.,  15.,  75., 422.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:21201) in                         1.6 s.
learning rate 0.0000289 -> 0.0000279
End of epoch 272 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 273, batches: 50, time: 0.002, data: 0.003) loss_real: 0.009 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.009 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000279 -> 0.0000269
End of epoch 273 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0.,  0., 52., 76.],
        [ 0.,  0., 64., 64.],
        [ 0.,  8., 54., 66.],
        [ 0.,  0., 52., 76.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.4219, 0.5938])             
Predicted per class: tensor([  0.,   8., 222., 282.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:21301) in                         1.4 s.
(epoch: 274, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000269 -> 0.0000259
End of epoch 274 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0., 128.,   0.],
        [  0.,   0., 128.,   0.],
        [  0.,   1., 124.,   3.],
        [  0.,   0., 126.,   2.]])
Overall accuracy: 0.25
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.9688, 0.0156])             
Predicted per class: tensor([  0.,   1., 506.,   5.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:21401) in                         1.5 s.
(epoch: 275, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000259 -> 0.0000249
End of epoch 275 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 276, batches: 50, time: 0.005, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
Confusion matrix:
tensor([[  0.,   6., 108.,  14.],
        [  0.,   3., 118.,   7.],
        [  0.,  15.,  95.,  18.],
        [  0.,   7., 112.,   9.]])
Overall accuracy: 0.21
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0234, 0.7422, 0.0703])             
Predicted per class: tensor([  0.,  31., 433.,  48.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:21501) in                         1.6 s.
learning rate 0.0000249 -> 0.0000239
End of epoch 276 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 277, batches: 50, time: 0.002, data: 0.004) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,   0.,  89.,  39.],
        [  0.,   0., 100.,  28.],
        [  0.,  10.,  77.,  41.],
        [  0.,   0.,  80.,  48.]])
Overall accuracy: 0.24
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0000, 0.6016, 0.3750])             
Predicted per class: tensor([  0.,  10., 346., 156.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:21601) in                         1.6 s.
learning rate 0.0000239 -> 0.0000229
End of epoch 277 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 278, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000229 -> 0.0000219
End of epoch 278 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 125.,   3.,   0.],
        [  1., 111.,  15.,   1.],
        [  0.,  94.,  30.,   4.],
        [  0., 112.,  15.,   1.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.8672, 0.2344, 0.0078])             
Predicted per class: tensor([  1., 442.,  63.,   6.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:21701) in                         1.5 s.
(epoch: 279, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000219 -> 0.0000209
End of epoch 279 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 125.,   3.,   0.],
        [  0., 111.,  17.,   0.],
        [  0., 119.,   7.,   2.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9766, 0.1328, 0.0156])             
Predicted per class: tensor([  0., 483.,  27.,   2.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:21801) in                         1.5 s.
(epoch: 280, batches: 50, time: 0.003, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000209 -> 0.0000199
End of epoch 280 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 281, batches: 50, time: 0.002, data: 0.000) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.001 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  1., 120.,   7.,   0.],
        [  1., 102.,  23.,   2.],
        [  0., 104.,  22.,   2.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9375, 0.1797, 0.0156])             
Predicted per class: tensor([  2., 454.,  52.,   4.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:21901) in                         1.4 s.
learning rate 0.0000199 -> 0.0000189
End of epoch 281 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 282, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000189 -> 0.0000179
End of epoch 282 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 63., 59.,  6.],
        [ 1., 55., 70.,  2.],
        [ 0., 62., 65.,  1.],
        [ 0., 58., 67.,  3.]])
Overall accuracy: 0.24
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.4297, 0.5078, 0.0234])             
Predicted per class: tensor([  1., 238., 261.,  12.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:22001) in                         1.6 s.
(epoch: 283, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000179 -> 0.0000169
End of epoch 283 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 84., 43.,  1.],
        [ 1., 71., 55.,  1.],
        [ 2., 67., 59.,  0.],
        [ 0., 62., 64.,  2.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.5547, 0.4609, 0.0156])             
Predicted per class: tensor([  3., 284., 221.,   4.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:22101) in                         1.7 s.
(epoch: 284, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000169 -> 0.0000159
End of epoch 284 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,  25., 103.,   0.],
        [  1.,  20., 107.,   0.],
        [  2.,  35.,  90.,   1.],
        [  0.,  25., 103.,   0.]])
Overall accuracy: 0.21
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.1562, 0.7031, 0.0000])             
Predicted per class: tensor([  3., 105., 403.,   1.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:22201) in                         1.5 s.
(epoch: 285, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000159 -> 0.0000149
End of epoch 285 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 286, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0.,  15., 104.,   9.],
        [  1.,   8., 104.,  15.],
        [  0.,  17., 103.,   8.],
        [  0.,  19., 101.,   8.]])
Overall accuracy: 0.23
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.0625, 0.8047, 0.0625])             
Predicted per class: tensor([  1.,  59., 412.,  40.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:22301) in                         1.5 s.
learning rate 0.0000149 -> 0.0000139
End of epoch 286 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 287, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000139 -> 0.0000129
End of epoch 287 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 126.,   0.,   2.],
        [  3., 111.,  12.,   2.],
        [  3.,  98.,  19.,   8.],
        [  0., 103.,  22.,   3.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.8672, 0.1484, 0.0234])             
Predicted per class: tensor([  6., 438.,  53.,  15.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:22401) in                         1.4 s.
(epoch: 288, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000129 -> 0.0000119
End of epoch 288 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 126.,   2.,   0.],
        [  0., 117.,   9.,   2.],
        [  1., 108.,  18.,   1.],
        [  0., 105.,  23.,   0.]])
Overall accuracy: 0.26
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9141, 0.1406, 0.0000])             
Predicted per class: tensor([  1., 456.,  52.,   3.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:22501) in                         1.6 s.
(epoch: 289, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000119 -> 0.0000109
End of epoch 289 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 290, batches: 50, time: 0.002, data: 0.002) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 80., 48.,  0.],
        [ 0., 71., 57.,  0.],
        [ 2., 60., 66.,  0.],
        [ 0., 59., 69.,  0.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.5547, 0.5156, 0.0000])             
Predicted per class: tensor([  2., 270., 240.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:22601) in                         1.6 s.
learning rate 0.0000109 -> 0.0000100
End of epoch 290 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 291, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000100 -> 0.0000090
End of epoch 291 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 93., 34.,  1.],
        [ 1., 66., 58.,  3.],
        [ 2., 73., 48.,  5.],
        [ 0., 66., 57.,  5.]])
Overall accuracy: 0.23
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.5156, 0.3750, 0.0391])             
Predicted per class: tensor([  3., 298., 197.,  14.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:22701) in                         1.7 s.
(epoch: 292, batches: 50, time: 0.002, data: 0.020) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.001 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000090 -> 0.0000080
End of epoch 292 / 300 	 Time Taken: 12 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 127.,   1.,   0.],
        [  0., 117.,  11.,   0.],
        [  3., 106.,  19.,   0.],
        [  0., 112.,  16.,   0.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9141, 0.1484, 0.0000])             
Predicted per class: tensor([  3., 462.,  47.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:22801) in                         1.4 s.
(epoch: 293, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000080 -> 0.0000070
End of epoch 293 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[ 0., 93., 23., 12.],
        [ 2., 68., 36., 22.],
        [ 3., 75., 41.,  9.],
        [ 0., 79., 40.,  9.]])
Overall accuracy: 0.23
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.5312, 0.3203, 0.0703])             
Predicted per class: tensor([  5., 315., 140.,  52.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:22901) in                         1.6 s.
(epoch: 294, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000070 -> 0.0000060
End of epoch 294 / 300 	 Time Taken: 10 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 295, batches: 50, time: 0.002, data: 0.002) loss_real: 0.000 loss_move: 0.298 loss_random: 0.000 loss_scanline: 0.000 loss: 0.298 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 126.,   2.,   0.],
        [  0., 118.,  10.,   0.],
        [  2., 107.,  19.,   0.],
        [  0., 115.,  12.,   1.]])
Overall accuracy: 0.27
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9219, 0.1484, 0.0078])             
Predicted per class: tensor([  2., 466.,  43.,   1.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:23001) in                         1.4 s.
learning rate 0.0000060 -> 0.0000050
End of epoch 295 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 296, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000050 -> 0.0000040
End of epoch 296 / 300 	 Time Taken: 9 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 126.,   2.,   0.],
        [  0., 103.,  23.,   2.],
        [  0., 114.,  13.,   1.]])
Overall accuracy: 0.29
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9844, 0.1797, 0.0078])             
Predicted per class: tensor([  0., 471.,  38.,   3.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:23101) in                         1.6 s.
(epoch: 297, batches: 50, time: 0.002, data: 0.003) loss_real: 0.001 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.001 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
learning rate 0.0000040 -> 0.0000030
End of epoch 297 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 127.,   1.,   0.],
        [  3., 117.,   8.,   0.],
        [  2., 104.,  22.,   0.],
        [  0., 111.,  15.,   2.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9141, 0.1719, 0.0156])             
Predicted per class: tensor([  5., 459.,  46.,   2.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:23201) in                         1.4 s.
(epoch: 298, batches: 50, time: 0.002, data: 0.000) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
learning rate 0.0000030 -> 0.0000020
End of epoch 298 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 299, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
Confusion matrix:
tensor([[  0., 128.,   0.,   0.],
        [  0., 119.,   9.,   0.],
        [  0., 106.,  22.,   0.],
        [  0., 119.,   9.,   0.]])
Overall accuracy: 0.28
statistics per class: real, move, random, scanline:             
Accuracy: tensor([0.0000, 0.9297, 0.1719, 0.0000])             
Predicted per class: tensor([  0., 472.,  40.,   0.])            
GT # instances per class: tensor([128., 128., 128., 128.]) 
ran validation set (B:23301) in                         1.4 s.
learning rate 0.0000020 -> 0.0000010
End of epoch 299 / 300 	 Time Taken: 11 sec
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
(epoch: 300, batches: 50, time: 0.002, data: 0.003) loss_real: 0.000 loss_move: 0.000 loss_random: 0.000 loss_scanline: 0.000 loss: 0.000 acc_real: 1.000 acc_move: 1.000 acc_scanline: 1.000 acc_random: 1.000 
accuracy: tensor(1.)
tensor([[64.,  0.,  0.,  0.],
        [ 0., 64.,  0.,  0.],
        [ 0.,  0., 64.,  0.],
        [ 0.,  0.,  0., 64.]])
saving the model at the end of epoch 300, iters 1497600
learning rate 0.0000010 -> 0.0000000
End of epoch 300 / 300 	 Time Taken: 10 sec
Finished training, model is saved (300 epochs in 3278.4367752075195s)
finished testing run '20'
everything copied back to Home folder /home/tlotze/City-GAN/results/Classifier/run20/Resnet18
