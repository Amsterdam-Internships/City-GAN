starting training run 78
----------------- Options ---------------
              D_headstart: 0                             
              D_threshold: 0.5                           
       accumulation_steps: 1                             
               batch_size: 64                            
                    beta1: 0.5                           
                    beta2: 0.999                         
          checkpoints_dir: /scratch/checkpoints          	[default: ./checkpoints]
        confidence_weight: 0.0                           
           continue_train: False                         
                crop_size: 64                            
                 dataroot: /scratch/datasets/CLEVR_colorized/images	[default: datasets]
             dataset_mode: double                        
                direction: None                          
              display_env: main                          
             display_freq: 100                           
               display_id: 0                             	[default: 1]
            display_ncols: 4                             
             display_port: 8097                          
           display_server: http://localhost              
          display_winsize: 256                           
                    epoch: latest                        
              epoch_count: 1                             
            flip_vertical: False                         
                 gan_mode: vanilla                       
                  gpu_ids: 0                             
                init_gain: 0.02                          
                init_type: normal                        
                 input_nc: 3                             
                  isTrain: True                          	[default: None]
          keep_last_batch: False                         
               lambda_aux: 1.0                           	[default: 0.1]
                load_iter: 0                             	[default: 0]
                load_size: 70                            
                       lr: 0.0002                        
           lr_decay_iters: 50                            
                lr_policy: step                          
         max_dataset_size: inf                           
          min_obj_surface: 100                           
                    model: copy                          
                 n_epochs: 5                             	[default: 20]
           n_epochs_decay: 0                             	[default: 10]
               n_layers_D: 3                             
                     name: CopyGAN                       
                      ndf: 64                            
                     netD: copy                          
                     netG: copy                          
                      ngf: 64                            
        no_border_zeroing: False                         
               no_dropout: False                         
                  no_flip: False                         
               no_grfakes: False                         
                  no_html: False                         
                     norm: instance                      
              num_threads: 4                             
                output_nc: 3                             
                    phase: train                         
                   pool_D: True                          	[default: False]
                pool_size: 50                            
               preprocess: resize_and_crop               
               print_freq: 100                           	[default: 20]
              real_target: 0.75                          	[default: 0.8]
             save_by_iter: False                         
          save_epoch_freq: 10                            
         save_latest_freq: 5000                          
                     seed: 42                            	[default: 0]
               sequential: False                         
           serial_batches: False                         
               sigma_blur: 1.0                           
                   suffix:                               
              tracemalloc: False                         
         update_html_freq: 100                           
           val_batch_size: 128                           
                 val_freq: 100                           
                  verbose: True                          	[default: False]
----------------- End -------------------
dataset [DoubleDataset] and dataloder are created
dataset [DoubleDataset] and dataloder are created
Starting training of copy-model
The number of training images = 26000
The number of validation images = 3000
The number of epochs to run = 5
gpu_ids: [0]
initialize network with normal
gpu_ids: [0]
initialize network with normal
model [CopyModel] was created
---------- Networks initialized -------------
DataParallel(
  (module): CopyGenerator(
    (enc1): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False, padding_mode=replicate)
        (1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (enc2): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False, padding_mode=replicate)
        (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (enc3): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False, padding_mode=replicate)
        (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (enc4): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False, padding_mode=replicate)
        (1): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec4): DecoderBlock(
      (model): Sequential(
        (0): Upsample(scale_factor=2.0, mode=bilinear)
        (1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=replicate)
        (2): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (3): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec3): DecoderBlock(
      (model): Sequential(
        (0): Upsample(scale_factor=2.0, mode=bilinear)
        (1): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=replicate)
        (2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (3): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec2): DecoderBlock(
      (model): Sequential(
        (0): Upsample(scale_factor=2.0, mode=bilinear)
        (1): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=replicate)
        (2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (3): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec1): DecoderBlock(
      (model): Sequential(
        (0): Conv2d(128, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=replicate)
      )
    )
    (sigmoid): Sigmoid()
  )
)
[Network G] Total number of parameters : 3.469 M
DataParallel(
  (module): CopyDiscriminator(
    (blur_filter): GaussianSmoothing()
    (enc1): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False, padding_mode=replicate)
        (1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (enc2): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False, padding_mode=replicate)
        (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (enc3): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False, padding_mode=replicate)
        (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (enc4): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False, padding_mode=replicate)
        (1): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec4): DecoderBlock(
      (model): Sequential(
        (0): Upsample(scale_factor=2.0, mode=bilinear)
        (1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=replicate)
        (2): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (3): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec3): DecoderBlock(
      (model): Sequential(
        (0): Upsample(scale_factor=2.0, mode=bilinear)
        (1): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=replicate)
        (2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (3): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec2): DecoderBlock(
      (model): Sequential(
        (0): Upsample(scale_factor=2.0, mode=bilinear)
        (1): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=replicate)
        (2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (3): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec1): DecoderBlock(
      (model): Sequential(
        (0): Conv2d(128, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), padding_mode=replicate)
      )
    )
    (sigmoid): Sigmoid()
    (pred_layers): Sequential(
      (0): AdaptiveAvgPool2d(output_size=1)
      (1): Flatten(start_dim=1, end_dim=-1)
      (2): Linear(in_features=512, out_features=256, bias=True)
      (3): LeakyReLU(negative_slope=0.01)
      (4): Linear(in_features=256, out_features=1, bias=True)
      (5): Sigmoid()
    )
  )
)
[Network D] Total number of parameters : 3.600 M
-----------------------------------------------
create web directory /scratch/checkpoints/CopyGAN/web...
validation accuracies:
                gf: 0.00
                real: 1.00
                fake: 0.00

ran validation set (B:1) in                         35.2 s.
(epoch: 1, batches: 100, time: 0.018, data: 0.003) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.974 loss_D_fake: 0.149 loss_D: 3.189 acc_real: 1.000 acc_fake: 0.000 loss_AUX: 1.870 loss_D_gr_fake: 0.195 acc_grfake: 0.000 
validation accuracies:
                gf: 1.00
                real: 0.00
                fake: 1.00

ran validation set (B:101) in                         32.4 s.
(epoch: 1, batches: 200, time: 0.012, data: 0.017) loss_G_comp: 1.023 loss_G_anti_sc: 0.370 loss_G: 1.392 loss_D_real: 0.798 loss_D_fake: 0.384 loss_D: 1.792 acc_real: 0.000 acc_fake: 1.000 loss_AUX: 0.610 loss_D_gr_fake: 0.195 acc_grfake: 1.000 
validation accuracies:
                gf: 0.99
                real: 0.25
                fake: 0.97

ran validation set (B:201) in                         33.6 s.
(epoch: 1, batches: 300, time: 0.012, data: 0.003) loss_G_comp: 0.928 loss_G_anti_sc: 0.396 loss_G: 1.324 loss_D_real: 0.795 loss_D_fake: 0.411 loss_D: 1.572 acc_real: 0.248 acc_fake: 0.969 loss_AUX: 0.366 loss_D_gr_fake: 0.195 acc_grfake: 0.992 
validation accuracies:
                gf: 0.99
                real: 0.21
                fake: 0.97

ran validation set (B:301) in                         33.6 s.
(epoch: 1, batches: 400, time: 0.011, data: 0.003) loss_G_comp: 0.943 loss_G_anti_sc: 0.405 loss_G: 1.348 loss_D_real: 0.777 loss_D_fake: 0.512 loss_D: 1.510 acc_real: 0.215 acc_fake: 0.968 loss_AUX: 0.221 loss_D_gr_fake: 0.195 acc_grfake: 0.993 
validation accuracies:
                gf: 1.00
                real: 0.01
                fake: 1.00

ran validation set (B:401) in                         33.8 s.
learning rate 0.0002000 -> 0.0002000
End of epoch 1 / 5 	 Time Taken: 353 sec
validation accuracies:
                gf: 1.00
                real: 0.05
                fake: 0.99

ran validation set (B:501) in                         34.5 s.
(epoch: 2, batches: 100, time: 0.010, data: 0.001) loss_G_comp: 1.029 loss_G_anti_sc: 0.343 loss_G: 1.372 loss_D_real: 0.759 loss_D_fake: 0.538 loss_D: 1.477 acc_real: 0.048 acc_fake: 0.988 loss_AUX: 0.180 loss_D_gr_fake: 0.195 acc_grfake: 0.999 
validation accuracies:
                gf: 0.99
                real: 0.20
                fake: 0.88

ran validation set (B:601) in                         33.6 s.
(epoch: 2, batches: 200, time: 0.010, data: 0.003) loss_G_comp: 0.856 loss_G_anti_sc: 0.481 loss_G: 1.337 loss_D_real: 0.793 loss_D_fake: 0.519 loss_D: 1.458 acc_real: 0.200 acc_fake: 0.877 loss_AUX: 0.145 loss_D_gr_fake: 0.195 acc_grfake: 0.994 
validation accuracies:
                gf: 1.00
                real: 0.01
                fake: 1.00

ran validation set (B:701) in                         33.8 s.
(epoch: 2, batches: 300, time: 0.010, data: 0.001) loss_G_comp: 0.841 loss_G_anti_sc: 0.484 loss_G: 1.325 loss_D_real: 0.839 loss_D_fake: 0.453 loss_D: 1.430 acc_real: 0.006 acc_fake: 0.999 loss_AUX: 0.138 loss_D_gr_fake: 0.195 acc_grfake: 1.000 
validation accuracies:
                gf: 1.00
                real: 0.00
                fake: 1.00

ran validation set (B:801) in                         34.1 s.
(epoch: 2, batches: 400, time: 0.010, data: 0.003) loss_G_comp: 0.800 loss_G_anti_sc: 0.540 loss_G: 1.340 loss_D_real: 0.876 loss_D_fake: 0.422 loss_D: 1.404 acc_real: 0.001 acc_fake: 1.000 loss_AUX: 0.106 loss_D_gr_fake: 0.195 acc_grfake: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 2 / 5 	 Time Taken: 295 sec
validation accuracies:
                gf: 1.00
                real: 0.06
                fake: 0.97

ran validation set (B:901) in                         34.0 s.
(epoch: 3, batches: 100, time: 0.011, data: 0.001) loss_G_comp: 0.924 loss_G_anti_sc: 0.410 loss_G: 1.334 loss_D_real: 0.817 loss_D_fake: 0.473 loss_D: 1.391 acc_real: 0.065 acc_fake: 0.974 loss_AUX: 0.101 loss_D_gr_fake: 0.195 acc_grfake: 0.999 
validation accuracies:
                gf: 1.00
                real: 0.00
                fake: 1.00

ran validation set (B:1001) in                         34.3 s.
(epoch: 3, batches: 200, time: 0.011, data: 0.001) loss_G_comp: 0.770 loss_G_anti_sc: 0.585 loss_G: 1.355 loss_D_real: 0.924 loss_D_fake: 0.391 loss_D: 1.410 acc_real: 0.001 acc_fake: 1.000 loss_AUX: 0.095 loss_D_gr_fake: 0.195 acc_grfake: 1.000 
validation accuracies:
                gf: 1.00
                real: 0.06
                fake: 0.98

ran validation set (B:1101) in                         34.3 s.
(epoch: 3, batches: 300, time: 0.011, data: 0.001) loss_G_comp: 0.843 loss_G_anti_sc: 0.480 loss_G: 1.324 loss_D_real: 0.888 loss_D_fake: 0.406 loss_D: 1.391 acc_real: 0.057 acc_fake: 0.977 loss_AUX: 0.098 loss_D_gr_fake: 0.195 acc_grfake: 0.998 
validation accuracies:
                gf: 1.00
                real: 0.00
                fake: 1.00

ran validation set (B:1201) in                         33.7 s.
(epoch: 3, batches: 400, time: 0.010, data: 0.003) loss_G_comp: 1.178 loss_G_anti_sc: 0.261 loss_G: 1.439 loss_D_real: 0.733 loss_D_fake: 0.580 loss_D: 1.400 acc_real: 0.002 acc_fake: 1.000 loss_AUX: 0.087 loss_D_gr_fake: 0.195 acc_grfake: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 3 / 5 	 Time Taken: 296 sec
validation accuracies:
                gf: 0.99
                real: 0.20
                fake: 0.90

ran validation set (B:1301) in                         34.4 s.
(epoch: 4, batches: 100, time: 0.010, data: 0.003) loss_G_comp: 0.869 loss_G_anti_sc: 0.448 loss_G: 1.318 loss_D_real: 0.852 loss_D_fake: 0.451 loss_D: 1.380 acc_real: 0.198 acc_fake: 0.902 loss_AUX: 0.078 loss_D_gr_fake: 0.195 acc_grfake: 0.991 
validation accuracies:
                gf: 1.00
                real: 0.10
                fake: 0.97

ran validation set (B:1401) in                         33.8 s.
(epoch: 4, batches: 200, time: 0.011, data: 0.003) loss_G_comp: 0.775 loss_G_anti_sc: 0.572 loss_G: 1.347 loss_D_real: 0.973 loss_D_fake: 0.361 loss_D: 1.412 acc_real: 0.104 acc_fake: 0.968 loss_AUX: 0.078 loss_D_gr_fake: 0.195 acc_grfake: 0.997 
validation accuracies:
                gf: 1.00
                real: 0.00
                fake: 1.00

ran validation set (B:1501) in                         33.7 s.
(epoch: 4, batches: 300, time: 0.011, data: 0.003) loss_G_comp: 0.836 loss_G_anti_sc: 0.495 loss_G: 1.331 loss_D_real: 0.853 loss_D_fake: 0.450 loss_D: 1.364 acc_real: 0.002 acc_fake: 0.999 loss_AUX: 0.062 loss_D_gr_fake: 0.195 acc_grfake: 1.000 
validation accuracies:
                gf: 1.00
                real: 0.00
                fake: 1.00

ran validation set (B:1601) in                         33.4 s.
(epoch: 4, batches: 400, time: 0.010, data: 0.001) loss_G_comp: 0.962 loss_G_anti_sc: 0.373 loss_G: 1.335 loss_D_real: 0.758 loss_D_fake: 0.553 loss_D: 1.369 acc_real: 0.000 acc_fake: 1.000 loss_AUX: 0.058 loss_D_gr_fake: 0.195 acc_grfake: 1.000 
learning rate 0.0002000 -> 0.0002000
End of epoch 4 / 5 	 Time Taken: 295 sec
validation accuracies:
                gf: 1.00
                real: 0.02
                fake: 1.00

ran validation set (B:1701) in                         33.0 s.
(epoch: 5, batches: 100, time: 0.010, data: 0.003) loss_G_comp: 0.847 loss_G_anti_sc: 0.479 loss_G: 1.326 loss_D_real: 0.873 loss_D_fake: 0.436 loss_D: 1.365 acc_real: 0.018 acc_fake: 0.996 loss_AUX: 0.056 loss_D_gr_fake: 0.195 acc_grfake: 1.000 
validation accuracies:
                gf: 1.00
                real: 0.00
                fake: 1.00

ran validation set (B:1801) in                         34.4 s.
(epoch: 5, batches: 200, time: 0.011, data: 0.004) loss_G_comp: 0.849 loss_G_anti_sc: 0.482 loss_G: 1.331 loss_D_real: 0.852 loss_D_fake: 0.446 loss_D: 1.362 acc_real: 0.000 acc_fake: 1.000 loss_AUX: 0.065 loss_D_gr_fake: 0.195 acc_grfake: 1.000 
validation accuracies:
                gf: 1.00
                real: 0.00
                fake: 1.00

ran validation set (B:1901) in                         34.3 s.
(epoch: 5, batches: 300, time: 0.010, data: 0.001) loss_G_comp: 0.862 loss_G_anti_sc: 0.471 loss_G: 1.333 loss_D_real: 0.818 loss_D_fake: 0.478 loss_D: 1.356 acc_real: 0.000 acc_fake: 1.000 loss_AUX: 0.060 loss_D_gr_fake: 0.195 acc_grfake: 1.000 
validation accuracies:
                gf: 1.00
                real: 0.01
                fake: 1.00

ran validation set (B:2001) in                         33.8 s.
(epoch: 5, batches: 400, time: 0.010, data: 0.001) loss_G_comp: 0.872 loss_G_anti_sc: 0.453 loss_G: 1.325 loss_D_real: 0.835 loss_D_fake: 0.464 loss_D: 1.353 acc_real: 0.013 acc_fake: 0.997 loss_AUX: 0.055 loss_D_gr_fake: 0.195 acc_grfake: 1.000 
learning rate 0.0002000 -> 0.0001600
End of epoch 5 / 5 	 Time Taken: 295 sec
Finished training, model is saved
Batches trained - G: 965, D: 1065 
