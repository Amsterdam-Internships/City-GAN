Setting up a new session...
Traceback (most recent call last):
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/site-packages/urllib3/connection.py", line 159, in _new_conn
    conn = connection.create_connection(
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/site-packages/urllib3/util/connection.py", line 84, in create_connection
    raise err
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/site-packages/urllib3/util/connection.py", line 74, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    httplib_response = self._make_request(
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/site-packages/urllib3/connectionpool.py", line 392, in _make_request
    conn.request(method, url, **httplib_request_kw)
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/http/client.py", line 1230, in request
    self._send_request(method, url, body, headers, encode_chunked)
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/http/client.py", line 1276, in _send_request
    self.endheaders(body, encode_chunked=encode_chunked)
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/http/client.py", line 1225, in endheaders
    self._send_output(message_body, encode_chunked=encode_chunked)
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/http/client.py", line 1004, in _send_output
    self.send(msg)
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/http/client.py", line 944, in send
    self.connect()
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/site-packages/urllib3/connection.py", line 187, in connect
    conn = self._new_conn()
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/site-packages/urllib3/connection.py", line 171, in _new_conn
    raise NewConnectionError(
urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x1507df6c43d0>: Failed to establish a new connection: [Errno 111] Connection refused

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/site-packages/requests/adapters.py", line 439, in send
    resp = conn.urlopen(
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/site-packages/urllib3/connectionpool.py", line 724, in urlopen
    retries = retries.increment(
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/site-packages/urllib3/util/retry.py", line 439, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=8097): Max retries exceeded with url: /env/main (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x1507df6c43d0>: Failed to establish a new connection: [Errno 111] Connection refused'))

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/tlotze/.local/lib/python3.8/site-packages/visdom/__init__.py", line 708, in _send
    return self._handle_post(
  File "/home/tlotze/.local/lib/python3.8/site-packages/visdom/__init__.py", line 677, in _handle_post
    r = self.session.post(url, data=data)
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/site-packages/requests/sessions.py", line 578, in post
    return self.request('POST', url, data=data, json=json, **kwargs)
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/site-packages/requests/sessions.py", line 530, in request
    resp = self.send(prep, **send_kwargs)
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/site-packages/requests/sessions.py", line 643, in send
    r = adapter.send(request, **kwargs)
  File "/sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/lib/python3.8/site-packages/requests/adapters.py", line 516, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=8097): Max retries exceeded with url: /env/main (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x1507df6c43d0>: Failed to establish a new connection: [Errno 111] Connection refused'))
[Errno 111] Connection refused
----------------- Options ---------------
              D_headstart: 30000                         	[default: 1000]
               batch_size: 50                            	[default: 80]
                    beta1: 0.5                           
                    beta2: 0.999                         
          checkpoints_dir: /scratch/checkpoints          	[default: ./checkpoints]
        confidence_weight: 0.0                           
           continue_train: False                         
                crop_size: 64                            
                 dataroot: /scratch/datasets/CLEVR_colorized/images	[default: datasets]
             dataset_mode: double                        
                direction: None                          
              display_env: main                          
             display_freq: 1000                          	[default: 1]
               display_id: 1                             
            display_ncols: 4                             
             display_port: 8097                          
           display_server: http://localhost              
          display_winsize: 256                           
                    epoch: latest                        
              epoch_count: 1                             
                 gan_mode: lsgan                         
                  gpu_ids: 0                             
                init_gain: 0.02                          
                init_type: normal                        
                 input_nc: 3                             
                  isTrain: True                          	[default: None]
               lambda_aux: 0.2                           
                load_iter: 0                             	[default: 0]
                load_size: 70                            
                       lr: 0.0001                        
           lr_decay_iters: 50                            
                lr_policy: step                          
         max_dataset_size: inf                           
                    model: copypasteGAN                  	[default: cycle_gan]
                 n_epochs: 2                             	[default: 1]
           n_epochs_decay: 0                             	[default: 3]
               n_layers_D: 3                             
                     name: CopyGAN                       
                      ndf: 64                            
                     netD: copy                          
                     netG: copy                          
                      ngf: 64                            
               no_dropout: False                         
                  no_flip: True                          
                  no_html: False                         
                     norm: instance                      
           nr_obj_classes: 1                             
              num_threads: 4                             
                output_nc: 3                             
                    phase: train                         
                pool_size: 50                            
               preprocess: resize_and_crop               
               print_freq: 1000                          	[default: 100]
              real_target: 1.0                           
             save_by_iter: False                         
          save_epoch_freq: 1                             	[default: 50]
         save_latest_freq: 5000                          
                     seed: 42                            
           serial_batches: False                         
               sigma_blur: 0.0                           	[default: 1.0]
                   suffix:                               
         update_html_freq: 1000                          
                  verbose: True                          	[default: False]
----------------- End -------------------
dataset [DoubleDataset] was created
The number of training images = 15000
The number of epochs to run = 2
initialize network with normal
initialize network with normal
model [CopyPasteGANModel] was created
---------- Networks initialized -------------
DataParallel(
  (module): CopyUNet(
    (enc1): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (enc2): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (enc3): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (enc4): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec4): DecoderBlock(
      (model): Sequential(
        (0): Upsample(scale_factor=2.0, mode=nearest)
        (1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (2): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (3): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec3): DecoderBlock(
      (model): Sequential(
        (0): Upsample(scale_factor=2.0, mode=nearest)
        (1): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (3): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec2): DecoderBlock(
      (model): Sequential(
        (0): Upsample(scale_factor=2.0, mode=nearest)
        (1): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (3): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec1): DecoderBlock(
      (model): Sequential(
        (0): Conv2d(128, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (sigmoid): Sigmoid()
    (avg_pool): AvgPool2d(kernel_size=8, stride=2, padding=0)
    (fc): Linear(in_features=512, out_features=1, bias=True)
    (relu): ReLU()
  )
)
[Network G] Total number of parameters : 3.469 M
DataParallel(
  (module): CopyUNet(
    (enc1): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (enc2): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (enc3): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (enc4): EncoderBlock(
      (model): Sequential(
        (0): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): InstanceNorm2d(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (2): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec4): DecoderBlock(
      (model): Sequential(
        (0): Upsample(scale_factor=2.0, mode=nearest)
        (1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (2): InstanceNorm2d(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (3): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec3): DecoderBlock(
      (model): Sequential(
        (0): Upsample(scale_factor=2.0, mode=nearest)
        (1): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (2): InstanceNorm2d(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (3): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec2): DecoderBlock(
      (model): Sequential(
        (0): Upsample(scale_factor=2.0, mode=nearest)
        (1): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (2): InstanceNorm2d(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (3): LeakyReLU(negative_slope=0.2, inplace=True)
      )
    )
    (dec1): DecoderBlock(
      (model): Sequential(
        (0): Conv2d(128, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (sigmoid): Sigmoid()
    (avg_pool): AvgPool2d(kernel_size=8, stride=2, padding=0)
    (fc): Linear(in_features=512, out_features=1, bias=True)
    (relu): ReLU()
  )
)
[Network D] Total number of parameters : 3.469 M
-----------------------------------------------
Exception in user code:
------------------------------------------------------------
checking connection: False


Could not connect to Visdom server. 
 Trying to start a server....
Command: /sw/arch/Debian10/EB_production/2020/software/Python/3.8.2-GCCcore-9.3.0/bin/python -m visdom.server -p 8097 &>/dev/null &
check connection after creating new server: False
create web directory /scratch/checkpoints/CopyGAN/web...
(epoch: 1, iters: 1000, time: 0.014, data: 0.987) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.613 loss_D_fake: 0.703 loss_D_gr_fake: 0.613 loss_AUX: 0.069 loss_D: 1.998 
D: real 0.5430111289024353, fake 0.5042611360549927, grfake: 0.45731300115585327
accuracy: real: 0.82
 fake: 0.56
 grfake: 0.08

(epoch: 1, iters: 2000, time: 0.013, data: 0.031) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.542 loss_D_fake: 0.762 loss_D_gr_fake: 0.582 loss_AUX: 0.065 loss_D: 1.951 
D: real 0.584873616695404, fake 0.5317545533180237, grfake: 0.43584144115448
accuracy: real: 0.9
 fake: 0.82
 grfake: 0.12

(epoch: 1, iters: 3000, time: 0.013, data: 0.054) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.474 loss_D_fake: 0.789 loss_D_gr_fake: 0.520 loss_AUX: 0.066 loss_D: 1.850 
D: real 0.6258923411369324, fake 0.5426068902015686, grfake: 0.39898955821990967
accuracy: real: 0.94
 fake: 0.78
 grfake: 0.08

(epoch: 1, iters: 4000, time: 0.011, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.452 loss_D_fake: 0.793 loss_D_gr_fake: 0.494 loss_AUX: 0.069 loss_D: 1.808 
D: real 0.6412414312362671, fake 0.5442557334899902, grfake: 0.3819734454154968
accuracy: real: 0.94
 fake: 0.8
 grfake: 0.08

(epoch: 1, iters: 5000, time: 0.012, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.398 loss_D_fake: 0.837 loss_D_gr_fake: 0.460 loss_AUX: 0.071 loss_D: 1.766 
D: real 0.6738148927688599, fake 0.5624488592147827, grfake: 0.3624204993247986
accuracy: real: 1.0
 fake: 0.84
 grfake: 0.06

saving the latest model (epoch 1, total_iters 5000)
(epoch: 1, iters: 6000, time: 0.013, data: 0.019) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.351 loss_D_fake: 0.927 loss_D_gr_fake: 0.442 loss_AUX: 0.074 loss_D: 1.793 
D: real 0.7074370980262756, fake 0.5990692973136902, grfake: 0.34652000665664673
accuracy: real: 1.0
 fake: 0.96
 grfake: 0.08

(epoch: 1, iters: 7000, time: 0.010, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.379 loss_D_fake: 0.787 loss_D_gr_fake: 0.382 loss_AUX: 0.073 loss_D: 1.621 
D: real 0.6900039315223694, fake 0.5345754623413086, grfake: 0.30534499883651733
accuracy: real: 0.96
 fake: 0.64
 grfake: 0.08

(epoch: 1, iters: 8000, time: 0.014, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.320 loss_D_fake: 0.939 loss_D_gr_fake: 0.409 loss_AUX: 0.076 loss_D: 1.743 
D: real 0.7327114939689636, fake 0.599242627620697, grfake: 0.3153497874736786
accuracy: real: 0.98
 fake: 0.86
 grfake: 0.08

(epoch: 1, iters: 9000, time: 0.012, data: 0.004) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.473 loss_D_fake: 0.605 loss_D_gr_fake: 0.324 loss_AUX: 0.078 loss_D: 1.481 
D: real 0.6371217966079712, fake 0.4414207339286804, grfake: 0.26650604605674744
accuracy: real: 0.86
 fake: 0.28
 grfake: 0.04

(epoch: 1, iters: 10000, time: 0.010, data: 0.346) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.297 loss_D_fake: 0.831 loss_D_gr_fake: 0.309 loss_AUX: 0.077 loss_D: 1.515 
D: real 0.755458414554596, fake 0.541975736618042, grfake: 0.24340438842773438
accuracy: real: 0.94
 fake: 0.58
 grfake: 0.08

saving the latest model (epoch 1, total_iters 10000)
(epoch: 1, iters: 11000, time: 0.009, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.287 loss_D_fake: 0.820 loss_D_gr_fake: 0.344 loss_AUX: 0.080 loss_D: 1.531 
D: real 0.7605176568031311, fake 0.5326037406921387, grfake: 0.25089436769485474
accuracy: real: 0.98
 fake: 0.54
 grfake: 0.12

(epoch: 1, iters: 12000, time: 0.010, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.265 loss_D_fake: 0.973 loss_D_gr_fake: 0.316 loss_AUX: 0.080 loss_D: 1.633 
D: real 0.7730463147163391, fake 0.6087966561317444, grfake: 0.24122491478919983
accuracy: real: 1.0
 fake: 0.84
 grfake: 0.1

(epoch: 1, iters: 13000, time: 0.011, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.212 loss_D_fake: 0.981 loss_D_gr_fake: 0.353 loss_AUX: 0.083 loss_D: 1.629 
D: real 0.8124980926513672, fake 0.6015039682388306, grfake: 0.2603081166744232
accuracy: real: 1.0
 fake: 0.84
 grfake: 0.14

(epoch: 1, iters: 14000, time: 0.010, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.253 loss_D_fake: 0.815 loss_D_gr_fake: 0.249 loss_AUX: 0.080 loss_D: 1.397 
D: real 0.7922918796539307, fake 0.5277276039123535, grfake: 0.1915096938610077
accuracy: real: 0.96
 fake: 0.56
 grfake: 0.06

(epoch: 1, iters: 15000, time: 0.009, data: 0.002) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.211 loss_D_fake: 0.828 loss_D_gr_fake: 0.318 loss_AUX: 0.082 loss_D: 1.439 
D: real 0.8160642981529236, fake 0.5316861867904663, grfake: 0.21461497247219086
accuracy: real: 0.98
 fake: 0.52
 grfake: 0.1

saving the latest model (epoch 1, total_iters 15000)
saving the model at the end of epoch 1, iters 15000
learning rate 0.0001000 -> 0.0001000
End of epoch 1 / 2 	 Time Taken: 91 sec
/home/tlotze/.local/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:131: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
(epoch: 2, iters: 1000, time: 0.015, data: 0.913) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.193 loss_D_fake: 1.048 loss_D_gr_fake: 0.457 loss_AUX: 0.084 loss_D: 1.782 
D: real 0.829107403755188, fake 0.608195424079895, grfake: 0.2788304090499878
accuracy: real: 0.98
 fake: 0.72
 grfake: 0.18

(epoch: 2, iters: 2000, time: 0.011, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.159 loss_D_fake: 0.912 loss_D_gr_fake: 0.203 loss_AUX: 0.081 loss_D: 1.355 
D: real 0.8544469475746155, fake 0.5666767954826355, grfake: 0.15937399864196777
accuracy: real: 1.0
 fake: 0.64
 grfake: 0.04

(epoch: 2, iters: 3000, time: 0.011, data: 0.003) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.157 loss_D_fake: 0.970 loss_D_gr_fake: 0.322 loss_AUX: 0.083 loss_D: 1.532 
D: real 0.8580657839775085, fake 0.5783083438873291, grfake: 0.2076873779296875
accuracy: real: 1.0
 fake: 0.64
 grfake: 0.12

(epoch: 2, iters: 4000, time: 0.008, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.170 loss_D_fake: 1.059 loss_D_gr_fake: 0.337 loss_AUX: 0.083 loss_D: 1.649 
D: real 0.845005989074707, fake 0.6156924962997437, grfake: 0.22703328728675842
accuracy: real: 1.0
 fake: 0.74
 grfake: 0.1

(epoch: 2, iters: 5000, time: 0.017, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.124 loss_D_fake: 0.950 loss_D_gr_fake: 0.232 loss_AUX: 0.084 loss_D: 1.390 
D: real 0.8840460181236267, fake 0.5723268985748291, grfake: 0.15417024493217468
accuracy: real: 1.0
 fake: 0.6
 grfake: 0.08

saving the latest model (epoch 2, total_iters 20000)
(epoch: 2, iters: 6000, time: 0.014, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.168 loss_D_fake: 0.846 loss_D_gr_fake: 0.308 loss_AUX: 0.085 loss_D: 1.407 
D: real 0.8527622222900391, fake 0.5221236348152161, grfake: 0.18566280603408813
accuracy: real: 0.96
 fake: 0.52
 grfake: 0.12

(epoch: 2, iters: 7000, time: 0.011, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.155 loss_D_fake: 0.786 loss_D_gr_fake: 0.221 loss_AUX: 0.083 loss_D: 1.245 
D: real 0.8609727025032043, fake 0.5013452172279358, grfake: 0.1434694230556488
accuracy: real: 1.0
 fake: 0.42
 grfake: 0.06

(epoch: 2, iters: 8000, time: 0.015, data: 0.003) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.220 loss_D_fake: 0.627 loss_D_gr_fake: 0.174 loss_AUX: 0.083 loss_D: 1.105 
D: real 0.8138468861579895, fake 0.4323900043964386, grfake: 0.11966323852539062
accuracy: real: 0.96
 fake: 0.38
 grfake: 0.04

(epoch: 2, iters: 9000, time: 0.011, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.156 loss_D_fake: 0.871 loss_D_gr_fake: 0.270 loss_AUX: 0.085 loss_D: 1.383 
D: real 0.861110508441925, fake 0.5279249548912048, grfake: 0.1570490002632141
accuracy: real: 0.98
 fake: 0.5
 grfake: 0.08

(epoch: 2, iters: 10000, time: 0.013, data: 0.002) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.172 loss_D_fake: 0.803 loss_D_gr_fake: 0.275 loss_AUX: 0.085 loss_D: 1.335 
D: real 0.8510655164718628, fake 0.48603910207748413, grfake: 0.15790046751499176
accuracy: real: 0.96
 fake: 0.42
 grfake: 0.1

saving the latest model (epoch 2, total_iters 25000)
(epoch: 2, iters: 11000, time: 0.015, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.150 loss_D_fake: 0.817 loss_D_gr_fake: 0.193 loss_AUX: 0.084 loss_D: 1.244 
D: real 0.8674267530441284, fake 0.49655482172966003, grfake: 0.11733164638280869
accuracy: real: 0.96
 fake: 0.46
 grfake: 0.06

(epoch: 2, iters: 12000, time: 0.018, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.122 loss_D_fake: 1.046 loss_D_gr_fake: 0.342 loss_AUX: 0.087 loss_D: 1.597 
D: real 0.8873959183692932, fake 0.5854610204696655, grfake: 0.17890532314777374
accuracy: real: 1.0
 fake: 0.62
 grfake: 0.14

(epoch: 2, iters: 13000, time: 0.013, data: 0.003) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.138 loss_D_fake: 0.762 loss_D_gr_fake: 0.336 loss_AUX: 0.086 loss_D: 1.322 
D: real 0.8746705651283264, fake 0.47529542446136475, grfake: 0.17167167365550995
accuracy: real: 1.0
 fake: 0.44
 grfake: 0.12

(epoch: 2, iters: 14000, time: 0.015, data: 0.001) loss_G_comp: 0.000 loss_G_anti_sc: 0.000 loss_G: 0.000 loss_D_real: 0.146 loss_D_fake: 0.660 loss_D_gr_fake: 0.240 loss_AUX: 0.085 loss_D: 1.131 
D: real 0.8687801957130432, fake 0.42738327383995056, grfake: 0.14506803452968597
accuracy: real: 0.98
 fake: 0.44
 grfake: 0.1

Headstart D over, starting G training
(epoch: 2, iters: 15000, time: 0.011, data: 0.001) loss_G_comp: 0.716 loss_G_anti_sc: 0.900 loss_G: 1.616 loss_D_real: 0.143 loss_D_fake: 0.950 loss_D_gr_fake: 0.261 loss_AUX: 0.084 loss_D: 1.439 
D: real 0.9032206535339355, fake 0.5319389700889587, grfake: 0.14089545607566833
accuracy: real: 1.0
 fake: 0.56
 grfake: 0.08

saving the latest model (epoch 2, total_iters 30000)
saving the model at the end of epoch 2, iters 30000
learning rate 0.0001000 -> 0.0000800
End of epoch 2 / 2 	 Time Taken: 91 sec
Finished training
